==============================================================================
Debug log for CPU2006.  This file contains very detailed debugging
output from the CPU2006 tools (as if "--verbose 99" had been specified) and is
typically useful only to developers of the CPU2006 toolset.   

For a successful run, this debug log will be removed automatically, unless you
specify "--keeptmp" on the command line, or "keeptmp=1" in your config file.

If you file a support request with cpu2006support@spec.org, you may be
asked to submit this file.
------------------------------------------------------------------------------

Environment variables that should have been set or changed by shrc:
SPEC: /mnt/sata/Code/zerocost/zerocost-specbenchmark
PATH: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin:/home/shr/.nvm/versions/node/v15.5.1/bin:/home/shr/.cabal/bin:/home/shr/.ghcup/bin:/home/shr/Code/LibrarySandboxing/emsdk:/home/shr/Code/LibrarySandboxing/emsdk/upstream/emscripten:/home/shr/Code/LibrarySandboxing/emsdk/node/14.15.5_64bit/bin:/home/shr/.cargo/bin:/opt/cmake/bin/:/home/shr/.mozbuild/git-cinnabar:/home/shr/.mozbuild/arcanist_git/bin:/home/shr/.mozbuild/moz-phab:/home/shr/.opam/system/bin:/home/shr/bin:/home/shr/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/shr/.dotnet/tools:/opt/z3/bin:/home/shr/Code/fstar_master/FStar/bin:/home/shr/Code/fstar_master/kremlin:/opt/wabt/bin/:/bin:/home/shr/go/bin
SPECPERLLIB: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin:/mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/lib
LD_LIBRARY_PATH: 
DYLD_LIBRARY_PATH: 
LC_ALL: C
LC_LANG: C
SPECDB_PWD: /mnt/sata/Code/zerocost/zerocost-specbenchmark/config
------------------------------------------------------------------------------

Runspec's verbose version output:
                 This is the SPEC CPU2006 benchmark tools suite.

Version summary:
    CPU2006 version: 1.1
 Benchmarks version: 110
      Tools version: 111
    runspec version: 6152 ($Id: runspec 6152 2008-05-07 05:25:30Z cloyce $)

Tools information:
 Tools package installed: linux-suse101-AMD64
 File locking method: fcntl(2) (probably network-safe)
Mode |  UID  |  GID  |   Size  |    Modified Date   | Name
0755 | 1000  | 1000  |  197376 | 17-May-2007 10:05:18 | specmake
0755 | 1000  | 1000  | 1269511 | 17-May-2007 10:05:18 | specperl
0755 | 1000  | 1000  |   25160 | 17-May-2007 10:05:18 | specinvoke
0755 | 1000  | 1000  |   28176 | 17-May-2007 10:05:18 | specinvoke_pm
0755 | 1000  | 1000  |   87352 | 17-May-2007 10:05:18 | specbzip2
0755 | 1000  | 1000  |   20056 | 17-May-2007 10:05:18 | specmd5sum
0755 | 1000  | 1000  |    7647 | 04-Jul-2021 18:11:47 | specdiff
0755 | 1000  | 1000  |   86555 | 04-Jul-2021 18:11:47 | specpp
0755 | 1000  | 1000  |  264960 | 17-May-2007 10:05:18 | specrxp
0755 | 1000  | 1000  |  121917 | 04-Jul-2021 18:11:47 | runspec

Version info for specinvoke (specinvoke): Version: 5000
Version info for specmake (specmake): GNU Make 3.81
Version info for specbzip2 (/mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specbzip2): bzip2 v1.0.3, 15-Feb-2005
Version info for specpp (/mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specperl): filepp version 1.7.1SPEC
Version info for specperl (/mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specperl): This is specperl, v5.8.8 built for x86_64-linux
                           For more detail on specperl, say 'specperl -V'

==============================================================================

1625604147.62: runspec v6152 started at Tue Jul  6 13:42:26 2021 on "shr-Desktop"
1625604147.62: runspec is: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/runspec
1625604147.62: runspec: runspec --config=linux32-i386-clangzerocost.cfg --action=run --define cores=1 --iterations=1 --noreportable --size=ref all_c_cpp
1625604147.62: toolset: linux-suse101-AMD64

1625604147.62(0.03s): Locating benchmarks...Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU(?:=\S*)?(?=\s|$)' for DSPEC_CPU in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]USPEC_CPU(?:=\S*)?(?=\s|$)' for USPEC_CPU in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]DNDEBUG(?:=\S*)?(?=\s|$)' for DNDEBUG in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]UNDEBUG(?:=\S*)?(?=\s|$)' for UNDEBUG in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU_WINDOWS(?:=\S*)?(?=\s|$)' for DSPEC_CPU_WINDOWS in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU_ILP32(?:=\S*)?(?=\s|$)' for DSPEC_CPU_ILP32 in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU_P64(?:=\S*)?(?=\s|$)' for DSPEC_CPU_P64 in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU_LP64(?:=\S*)?(?=\s|$)' for DSPEC_CPU_LP64 in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU_ILP64(?:=\S*)?(?=\s|$)' for DSPEC_CPU_ILP64 in /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/flags-mandatory.xml
1625604147.65: Reading suite directory for 'CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec'
1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '464.h264ref'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/464.h264ref/Spec/object.pm in 0.000167847s
1625604147.65:     Instantiated Spec::Benchmark::h264ref464 in 0.000123978s
1625604147.65:     Finding src.alts took 0.000026941s
1625604147.65:   Setting up h264ref took 0.000444174s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '400.perlbench'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/400.perlbench/Spec/object.pm in 0.000543118s
1625604147.65:     Instantiated Spec::Benchmark::perlbench400 in 0.000065088s
1625604147.65:     Finding src.alts took 0.000020981s
1625604147.65:   Setting up perlbench took 0.000733137s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '483.xalancbmk'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/483.xalancbmk/Spec/object.pm in 0.000446081s
1625604147.65:     Instantiated Spec::Benchmark::xalancbmk483 in 0.000094175s
1625604147.65:     Finding src.alts took 0.000019073s
1625604147.65:   Setting up xalancbmk took 0.000656843s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', 'all_fortran.bset'
1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '403.gcc'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/Spec/object.pm in 0.000141144s
1625604147.65:     Instantiated Spec::Benchmark::gcc403 in 0.000056028s
1625604147.65:     Finding src.alts took 0.000019073s
1625604147.65:   Setting up gcc took 0.000315189s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '462.libquantum'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/462.libquantum/Spec/object.pm in 0.000115156s
1625604147.65:     Instantiated Spec::Benchmark::libquantum462 in 0.000046015s
1625604147.65:     Finding src.alts took 0.000017881s
1625604147.65:   Setting up libquantum took 0.000272989s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '445.gobmk'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/445.gobmk/Spec/object.pm in 0.000155210s
1625604147.65:     Instantiated Spec::Benchmark::gobmk445 in 0.000051022s
1625604147.65:     Finding src.alts took 0.000019073s
1625604147.65:   Setting up gobmk took 0.000327826s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '453.povray'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/453.povray/Spec/object.pm in 0.000174046s
1625604147.65:     Instantiated Spec::Benchmark::povray453 in 0.000097990s
1625604147.65:     Finding src.alts took 0.000025988s
1625604147.65:   Setting up povray took 0.000435114s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '450.soplex'
1625604147.65:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/450.soplex/Spec/object.pm in 0.000262022s
1625604147.65:     Instantiated Spec::Benchmark::soplex450 in 0.000072002s
1625604147.65:     Finding src.alts took 0.000027895s
1625604147.65:   Setting up soplex took 0.000522137s

1625604147.65:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '481.wrf'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/481.wrf/Spec/object.pm in 0.001262903s
1625604147.66:     Instantiated Spec::Benchmark::wrf481 in 0.000153065s
1625604147.66:     Finding src.alts took 0.000037909s
1625604147.66:   Setting up wrf took 0.001629829s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', 'all_c_cpp.bset'
1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '458.sjeng'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/458.sjeng/Spec/object.pm in 0.000109911s
1625604147.66:     Instantiated Spec::Benchmark::sjeng458 in 0.000056028s
1625604147.66:     Finding src.alts took 0.000021219s
1625604147.66:   Setting up sjeng took 0.000295877s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '435.gromacs'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/435.gromacs/Spec/object.pm in 0.000134945s
1625604147.66:     Instantiated Spec::Benchmark::gromacs435 in 0.000063181s
1625604147.66:     Finding src.alts took 0.000019073s
1625604147.66:   Setting up gromacs took 0.000313997s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', 'all_cpp.bset'
1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', 'CFP2006.bset'
1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', 'all_c.bset'
1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '465.tonto'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/465.tonto/Spec/object.pm in 0.000897884s
1625604147.66:     Instantiated Spec::Benchmark::tonto465 in 0.000088930s
1625604147.66:     Finding src.alts took 0.000020027s
1625604147.66:   Setting up tonto took 0.001111031s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '437.leslie3d'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/437.leslie3d/Spec/object.pm in 0.000100136s
1625604147.66:     Instantiated Spec::Benchmark::leslie3d437 in 0.000051975s
1625604147.66:     Finding src.alts took 0.000019073s
1625604147.66:   Setting up leslie3d took 0.000266790s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '447.dealII'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/447.dealII/Spec/object.pm in 0.000344992s
1625604147.66:     Instantiated Spec::Benchmark::dealII447 in 0.000059843s
1625604147.66:     Finding src.alts took 0.000019073s
1625604147.66:   Setting up dealII took 0.000525951s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '434.zeusmp'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/434.zeusmp/Spec/object.pm in 0.000108004s
1625604147.66:     Instantiated Spec::Benchmark::zeusmp434 in 0.000051975s
1625604147.66:     Finding src.alts took 0.000018120s
1625604147.66:   Setting up zeusmp took 0.000276089s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', 'CINT2006.bset'
1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '998.specrand'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/998.specrand/Spec/object.pm in 0.000112057s
1625604147.66:     Instantiated Spec::Benchmark::specrand998 in 0.000045061s
1625604147.66:     Finding src.alts took 0.000020027s
1625604147.66:   Setting up specrand took 0.000274181s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '436.cactusADM'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/436.cactusADM/Spec/object.pm in 0.000246048s
1625604147.66:     Instantiated Spec::Benchmark::cactusADM436 in 0.000073910s
1625604147.66:     Finding src.alts took 0.000019073s
1625604147.66:   Setting up cactusADM took 0.000438929s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '454.calculix'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/454.calculix/Spec/object.pm in 0.000283957s
1625604147.66:     Instantiated Spec::Benchmark::calculix454 in 0.000074148s
1625604147.66:     Finding src.alts took 0.000020027s
1625604147.66:   Setting up calculix took 0.000477076s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '999.specrand'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/Spec/object.pm in 0.000103951s
1625604147.66:     Instantiated Spec::Benchmark::specrand999 in 0.000044107s
1625604147.66:     Finding src.alts took 0.000018120s
1625604147.66:   Setting up specrand took 0.000258923s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '444.namd'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/444.namd/Spec/object.pm in 0.000128031s
1625604147.66:     Instantiated Spec::Benchmark::namd444 in 0.000052929s
1625604147.66:     Finding src.alts took 0.000017881s
1625604147.66:   Setting up namd took 0.000293016s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', 'all_mixed.bset'
1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '471.omnetpp'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/471.omnetpp/Spec/object.pm in 0.000123978s
1625604147.66:     Instantiated Spec::Benchmark::omnetpp471 in 0.000051022s
1625604147.66:     Finding src.alts took 0.000018120s
1625604147.66:   Setting up omnetpp took 0.000287056s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '429.mcf'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/429.mcf/Spec/object.pm in 0.000104189s
1625604147.66:     Instantiated Spec::Benchmark::mcf429 in 0.000045776s
1625604147.66:     Finding src.alts took 0.000017881s
1625604147.66:   Setting up mcf took 0.000260115s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '473.astar'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/473.astar/Spec/object.pm in 0.000162840s
1625604147.66:     Instantiated Spec::Benchmark::astar473 in 0.000046015s
1625604147.66:     Finding src.alts took 0.000018120s
1625604147.66:   Setting up astar took 0.000323057s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '482.sphinx3'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/482.sphinx3/Spec/object.pm in 0.000337124s
1625604147.66:     Instantiated Spec::Benchmark::sphinx3482 in 0.000061989s
1625604147.66:     Finding src.alts took 0.000018835s
1625604147.66:   Setting up sphinx3 took 0.000519991s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '459.GemsFDTD'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/459.GemsFDTD/Spec/object.pm in 0.000164032s
1625604147.66:     Instantiated Spec::Benchmark::GemsFDTD459 in 0.000047922s
1625604147.66:     Finding src.alts took 0.000017881s
1625604147.66:   Setting up GemsFDTD took 0.000329018s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '470.lbm'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/470.lbm/Spec/object.pm in 0.000101089s
1625604147.66:     Instantiated Spec::Benchmark::lbm470 in 0.000042915s
1625604147.66:     Finding src.alts took 0.000018120s
1625604147.66:   Setting up lbm took 0.000253916s

1625604147.66:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '416.gamess'
1625604147.66:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/416.gamess/Spec/object.pm in 0.000156164s
1625604147.66:     Instantiated Spec::Benchmark::gamess416 in 0.000058889s
1625604147.66:     Finding src.alts took 0.000017881s
1625604147.67:   Setting up gamess took 0.000326872s

1625604147.67:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '401.bzip2'
1625604147.67:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/401.bzip2/Spec/object.pm in 0.000109911s
1625604147.67:     Instantiated Spec::Benchmark::bzip2401 in 0.000046015s
1625604147.67:     Finding src.alts took 0.000018835s
1625604147.67:   Setting up bzip2 took 0.000268936s

1625604147.67:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '456.hmmer'
1625604147.67:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/456.hmmer/Spec/object.pm in 0.000174046s
1625604147.67:     Instantiated Spec::Benchmark::hmmer456 in 0.000050068s
1625604147.67:     Finding src.alts took 0.000018835s
1625604147.67:   Setting up hmmer took 0.000349998s

1625604147.67:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '410.bwaves'
1625604147.67:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/410.bwaves/Spec/object.pm in 0.000090122s
1625604147.67:     Instantiated Spec::Benchmark::bwaves410 in 0.000049829s
1625604147.67:     Finding src.alts took 0.000017881s
1625604147.67:   Setting up bwaves took 0.000250816s

1625604147.67:   Reading benchmark directory for '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec', '433.milc'
1625604147.67:     Evaluated /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/433.milc/Spec/object.pm in 0.000138044s
1625604147.67:     Instantiated Spec::Benchmark::milc433 in 0.000057936s
1625604147.67:     Finding src.alts took 0.000017881s
1625604147.67:   Setting up milc took 0.000310183s

1625604147.67: Setting up suite took 0.016039133s
1625604147.67: Reading suite directory for 'flags-mandatory.xml', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec'
1625604147.67: Reading suite directory for 'version.txt', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec'
1625604147.67: Reading suite directory for 'Makefile.defaults', '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec'
1625604147.67: found 31 benchmarks in 7 benchsets.
1625604147.67: Reading config file '/mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg'

1625604147.67:   '403.gcc' added
1625604147.67:   '999.specrand' added
1625604147.68: Verbosity = 5
1625604147.68: Action    = validate
1625604147.68: Tune      = base
1625604147.68: Ext       = SegmentZero
1625604147.68: Size      = ref
1625604147.68: Machine   = default
1625604147.68: benchmarks= 403.gcc,999.specrand
1625604147.68: outputs   = asc
1625604147.68: username  = shr
1625604147.68: Benchmarks selected: 403.gcc, 999.specrand
1625604147.68: Compiling Binaries

1625604147.68: ------------------------------------------------------------------------
1625604147.97: Tee child 781652 exited with code 0 (exit code=0, signal=0)
1625604147.98: MD5 mismatch for options (stored: 2b66b7cbb233dda745632334fd36b81d)(expected: e17482de158179c3b53b99abc54242c7)
1625604147.98:   Building 403.gcc base SegmentZero default: (build_base_SegmentZero.0000)
1625604148.09: Comparing MD5 hashes:
1625604148.09:   d84b4ba86f793c8e9c8f2eb4dcb7b461 /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/src/Makefile
1625604148.09:   d84b4ba86f793c8e9c8f2eb4dcb7b461 /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000/Makefile
1625604148.10: Wrote to makefile '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000/Makefile.deps':

1625604148.10: # These are the build dependencies

1625604148.10: # End dependencies
1625604148.10: Wrote to makefile '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000/Makefile.spec':
1625604148.10: TUNE=base
1625604148.10: EXT=SegmentZero
1625604148.10: NUMBER=403
1625604148.10: NAME=gcc
1625604148.10: SOURCES= alloca.c asprintf.c vasprintf.c c-parse.c c-lang.c attribs.c \
1625604148.10: 	 c-errors.c c-lex.c c-pragma.c c-decl.c c-typeck.c c-convert.c \
1625604148.10: 	 c-aux-info.c c-common.c c-format.c c-semantics.c c-objc-common.c main.c \
1625604148.10: 	 cpplib.c cpplex.c cppmacro.c cppexp.c cppfiles.c cpphash.c cpperror.c \
1625604148.10: 	 cppinit.c cppdefault.c line-map.c mkdeps.c prefix.c version.c mbchar.c \
1625604148.10: 	 alias.c bb-reorder.c bitmap.c builtins.c caller-save.c calls.c cfg.c \
1625604148.10: 	 cfganal.c cfgbuild.c cfgcleanup.c cfglayout.c cfgloop.c cfgrtl.c \
1625604148.10: 	 combine.c conflict.c convert.c cse.c cselib.c dbxout.c debug.c \
1625604148.10: 	 dependence.c df.c diagnostic.c doloop.c dominance.c dwarf2asm.c \
1625604148.10: 	 dwarf2out.c dwarfout.c emit-rtl.c except.c explow.c expmed.c expr.c \
1625604148.10: 	 final.c flow.c fold-const.c function.c gcse.c genrtl.c ggc-common.c \
1625604148.10: 	 global.c graph.c haifa-sched.c hash.c hashtable.c hooks.c ifcvt.c \
1625604148.10: 	 insn-attrtab.c insn-emit.c insn-extract.c insn-opinit.c insn-output.c \
1625604148.10: 	 insn-peep.c insn-recog.c integrate.c intl.c jump.c langhooks.c lcm.c \
1625604148.10: 	 lists.c local-alloc.c loop.c obstack.c optabs.c params.c predict.c \
1625604148.10: 	 print-rtl.c print-tree.c profile.c real.c recog.c reg-stack.c regclass.c \
1625604148.10: 	 regmove.c regrename.c reload.c reload1.c reorg.c resource.c rtl.c \
1625604148.10: 	 rtlanal.c rtl-error.c sbitmap.c sched-deps.c sched-ebb.c sched-rgn.c \
1625604148.10: 	 sched-vis.c sdbout.c sibcall.c simplify-rtx.c ssa.c ssa-ccp.c ssa-dce.c \
1625604148.10: 	 stmt.c stor-layout.c stringpool.c timevar.c toplev.c tree.c tree-dump.c \
1625604148.10: 	 tree-inline.c unroll.c varasm.c varray.c vmsdbgout.c xcoffout.c \
1625604148.10: 	 ggc-page.c i386.c xmalloc.c xexit.c hashtab.c safe-ctype.c splay-tree.c \
1625604148.10: 	 xstrdup.c md5.c fibheap.c xstrerror.c concat.c partition.c hex.c \
1625604148.10: 	 lbasename.c getpwd.c ucbqsort.c
1625604148.10: EXEBASE=gcc
1625604148.10: NEED_MATH=yes
1625604148.10: BENCHLANG=C
1625604148.10: ONESTEP=
1625604148.10: CONESTEP=

1625604148.10: BENCH_FLAGS      = -I.
1625604148.10: CC               = /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition
1625604148.10: COPTIMIZE        = -O2
1625604148.10: CXX              = /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang++ -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -std=gnu++03
1625604148.10: CXXOPTIMIZE      = -O2
1625604148.10: FC               = /usr/local/bin/gfortran
1625604148.10: FOPTIMIZE        = -O2
1625604148.10: FPBASE           = yes
1625604148.10: OS               = unix
1625604148.10: absolutely_no_locking = 0
1625604148.10: abstol           = 
1625604148.10: action           = validate
1625604148.10: allow_extension_override = 0
1625604148.10: backup_config    = 1
1625604148.10: baseexe          = gcc
1625604148.10: basepeak         = 0
1625604148.10: benchdir         = benchspec
1625604148.10: benchmark        = 403.gcc
1625604148.10: binary           = 
1625604148.10: bindir           = exe
1625604148.10: build_in_build_dir = 1
1625604148.10: builddir         = build
1625604148.10: bundleaction     = 
1625604148.10: bundlename       = 
1625604148.10: calctol          = 0
1625604148.10: changedmd5       = 0
1625604148.10: check_integrity  = 1
1625604148.10: check_md5        = 1
1625604148.10: check_version    = 1
1625604148.10: command_add_redirect = 0
1625604148.10: commanderrfile   = speccmds.err
1625604148.10: commandexe       = gcc_base.SegmentZero
1625604148.10: commandfile      = speccmds.cmd
1625604148.10: commandoutfile   = speccmds.out
1625604148.10: commandstdoutfile = speccmds.stdout
1625604148.10: compareerrfile   = compare.err
1625604148.10: comparefile      = compare.cmd
1625604148.10: compareoutfile   = compare.out
1625604148.10: comparestdoutfile = compare.stdout
1625604148.10: compile_error    = 0
1625604148.10: compwhite        = 
1625604148.10: configdir        = config
1625604148.10: configpath       = /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg
1625604148.10: copies           = 1
1625604148.10: datadir          = data
1625604148.10: delay            = 0
1625604148.10: deletebinaries   = 0
1625604148.10: deletework       = 0
1625604148.10: difflines        = 10
1625604148.10: dirprot          = 511
1625604148.10: endian           = 12345678
1625604148.10: env_vars         = 0
1625604148.10: exitvals         = spec_exit
1625604148.10: expand_notes     = 0
1625604148.10: expid            = 
1625604148.10: ext              = SegmentZero
1625604148.10: fake             = 0
1625604148.10: feedback         = 1
1625604148.10: flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
1625604148.10: floatcompare     = 
1625604148.10: help             = 0
1625604148.10: http_proxy       = 
1625604148.10: http_timeout     = 30
1625604148.10: hw_avail         = Dec-9999
1625604148.10: hw_cpu_char      = 
1625604148.10: hw_cpu_mhz       = 3000
1625604148.10: hw_cpu_name      = AMD Opteron 256
1625604148.10: hw_disk          = SATA
1625604148.10: hw_fpu           = Integrated
1625604148.10: hw_memory        = 2 GB (2 x 1GB DDR333 CL2.5)
1625604148.10: hw_model         = Tyan Thunder KKQS Pro (S4882)
1625604148.10: hw_nchips        = 1
1625604148.10: hw_ncores        = 1
1625604148.10: hw_ncoresperchip = 1
1625604148.10: hw_ncpuorder     = 1 chip
1625604148.10: hw_nthreadspercore = 1
1625604148.10: hw_ocache        = None
1625604148.10: hw_pcache        = 64 KB I + 64 KB D on chip per chip
1625604148.10: hw_scache        = 1 MB I+D on chip per chip
1625604148.10: hw_tcache        = None
1625604148.10: hw_vendor        = Tyan
1625604148.10: ignore_errors    = yes
1625604148.10: ignore_sigint    = 0
1625604148.10: ignorecase       = 
1625604148.10: info_wrap_columns = 50
1625604148.10: inputdir         = input
1625604148.10: iteration        = -1
1625604148.10: iterations       = 1
1625604148.10: keeptmp          = 0
1625604148.10: license_num      = 0
1625604148.10: line_width       = 0
1625604148.10: locking          = 1
1625604148.10: log              = CPU2006
1625604148.10: log_line_width   = 0
1625604148.10: log_timestamp    = 0
1625604148.10: logname          = /mnt/sata/Code/zerocost/zerocost-specbenchmark/result/CPU2006.001.log
1625604148.10: lognum           = 001
1625604148.10: mach             = default
1625604148.10: mail_reports     = all
1625604148.10: mailcompress     = 0
1625604148.10: mailmethod       = smtp
1625604148.10: mailport         = 25
1625604148.10: mailserver       = 127.0.0.1
1625604148.10: mailto           = 
1625604148.10: make             = specmake
1625604148.10: make_no_clobber  = 0
1625604148.10: makeflags        = -j8
1625604148.10: max_active_compares = 0
1625604148.10: mean_anyway      = 0
1625604148.10: min_report_runs  = 3
1625604148.10: minimize_builddirs = 0
1625604148.10: minimize_rundirs = 0
1625604148.10: name             = gcc
1625604148.10: need_math        = yes
1625604148.10: no_input_handler = close
1625604148.10: no_monitor       = 
1625604148.10: note_preenv      = 0
1625604148.10: notes0100        =  C base flags: -O2
1625604148.10: notes0110        =  C++ base flags: -O2
1625604148.10: notes0120        =  Fortran base flags: -O2
1625604148.10: notes25          = 
1625604148.10: notes_wrap_columns = 0
1625604148.10: notes_wrap_indent =   
1625604148.10: num              = 403
1625604148.10: obiwan           = 
1625604148.10: os_exe_ext       = 
1625604148.10: output           = asc
1625604148.10: output_format    = asc
1625604148.10: output_root      = 
1625604148.10: outputdir        = output
1625604148.10: parallel_setup   = 1
1625604148.10: parallel_setup_prefork = 
1625604148.10: parallel_setup_type = fork
1625604148.10: parallel_test    = 0
1625604148.10: parallel_test_submit = 0
1625604148.10: path             = /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc
1625604148.10: plain_train      = 1
1625604148.10: preenv           = 1
1625604148.10: prefix           = 
1625604148.10: prepared_by      = 
1625604148.10: ranks            = 1
1625604148.10: rate             = 0
1625604148.10: realuser         = your name here
1625604148.10: rebuild          = 0
1625604148.10: reftime          = reftime
1625604148.10: reltol           = 
1625604148.10: reportable       = 0
1625604148.10: resultdir        = result
1625604148.10: review           = 0
1625604148.10: run              = all
1625604148.10: rundir           = run
1625604148.10: runspec          = /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/runspec --config=linux32-i386-clangzerocost.cfg --action=run --define cores=1 --iterations=1 --noreportable --size=ref all_c_cpp
1625604148.10: safe_eval        = 1
1625604148.10: section_specifier_fatal = 1
1625604148.10: sendmail         = /usr/sbin/sendmail
1625604148.10: setpgrp_enabled  = 1
1625604148.10: setprocgroup     = 1
1625604148.10: shrate           = 0
1625604148.10: sigint           = 2
1625604148.10: size             = ref
1625604148.10: size_class       = ref
1625604148.10: skipabstol       = 
1625604148.10: skipobiwan       = 
1625604148.10: skipreltol       = 
1625604148.10: skiptol          = 
1625604148.10: smarttune        = base
1625604148.10: specdiff         = specdiff
1625604148.10: specmake         = Makefile.YYYtArGeTYYYspec
1625604148.10: specrun          = specinvoke
1625604148.10: speed            = 0
1625604148.10: srcalt           = 
1625604148.10: srcdir           = src
1625604148.10: stagger          = 10
1625604148.10: strict_rundir_verify = 1
1625604148.10: sw_avail         = Dec-9999
1625604148.10: sw_base_ptrsize  = 32-bit
1625604148.10: sw_compiler      = gcc , g++ & gfortran 4.2 Snapshot 20060715 (for i386)
1625604148.10: sw_file          = ext3
1625604148.10: sw_os            = SUSE Linux 10.1 (for i386)
1625604148.10: sw_other         = None
1625604148.10: sw_peak_ptrsize  = 32-bit
1625604148.10: sw_state         = runlevel 3
1625604148.10: sysinfo_program  = 
1625604148.10: table            = 1
1625604148.10: teeout           = yes
1625604148.10: teerunout        = yes
1625604148.10: test_date        = Jul-2021
1625604148.10: test_sponsor     = Turbo Computers
1625604148.10: tester           = 
1625604148.10: top              = /mnt/sata/Code/zerocost/zerocost-specbenchmark
1625604148.10: train_with       = train
1625604148.10: tune             = base
1625604148.10: uid              = 1000
1625604148.10: unbuffer         = 1
1625604148.10: update-flags     = 0
1625604148.10: use_submit_for_speed = 0
1625604148.10: username         = shr
1625604148.10: vendor           = anon
1625604148.10: vendor_makefiles = 0
1625604148.10: verbose          = 5
1625604148.10: version          = 0
1625604148.10: version_url      = http://www.spec.org/auto/cpu2006/current_version
1625604148.10: worklist         = list
1625604148.10: OUTPUT_RMFILES   = integrate.s
1625604148.10:   Compile for '403.gcc' started at: Tue Jul  6 13:42:28 2021 (1625604148)
1625604148.10: Issuing make.clean command 'specmake -j8 clean'
1625604148.10: specmake -j8 clean 2> make.clean.err | tee make.clean.out
1625604148.10: Start make.clean command: Tue Jul  6 13:42:28 2021 (1625604148)
1625604148.11: specmake[1]: Entering directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000'
1625604148.11: rm -rf gcc
1625604148.11: rm -rf gcc.exe
1625604148.11: rm -rf *.o  integrate.s
1625604148.11: find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
1625604148.11: rm -rf core
1625604148.11: rm -rf 
1625604148.11: specmake[1]: Leaving directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000'
1625604148.11: Tee child 781674 exited with code 0 (exit code=0, signal=0)
1625604148.11: Stop make.clean command: Tue Jul  6 13:42:28 2021 (1625604148)
1625604148.11: Elapsed time for make.clean command: 00:00:00 (0)
1625604148.11: Issuing make command 'specmake -j8 build'
1625604148.11: specmake -j8 build 2> make.err | tee make.out
1625604148.11: Start make command: Tue Jul  6 13:42:28 2021 (1625604148)
1625604148.12: specmake[1]: Entering directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000'
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o alloca.o -DSPEC_CPU -DNDEBUG -I.   -O2                alloca.c
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o asprintf.o -DSPEC_CPU -DNDEBUG -I.   -O2                asprintf.c
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o vasprintf.o -DSPEC_CPU -DNDEBUG -I.   -O2                vasprintf.c
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-parse.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-parse.c
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-lang.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-lang.c
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o attribs.o -DSPEC_CPU -DNDEBUG -I.   -O2                attribs.c
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-errors.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-errors.c
1625604148.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-lex.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-lex.c
1625604148.12: clang-12clang-12: : warningwarning: : -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]-Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]

1625604148.12: clang-12clang-12: warning: : warningargument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]: 
1625604148.12: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.12: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.12: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.12: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.12: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.13: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.13: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.13: clang-12: warningclang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.13: : -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]

1625604148.14: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.14: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-pragma.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-pragma.c
1625604148.14: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.15: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.16: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.16: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.18: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-decl.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-decl.c
1625604148.19: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.19: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.20: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-typeck.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-typeck.c
1625604148.21: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-convert.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-convert.c
1625604148.22: clang-12/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-aux-info.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-aux-info.c
1625604148.23: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.23: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.23: : warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.23: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.23: c-parse.c:2519:27: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.23:                   yyval.ttype = build1 (STMT_EXPR, last_expr_type, yyvsp[-2].ttype);
1625604148.23:                                 ~~~~~~  ^~~~~~~~~
1625604148.24: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.24: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.25: c-parse.c:3811:41: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.25:                   yyval.ttype = add_stmt (build_stmt (COMPOUND_STMT, last_tree));
1625604148.25:                                           ~~~~~~~~~~  ^~~~~~~~~~~~~
1625604148.25: c-parse.c:3841:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.25:                     = add_stmt (build_stmt (DO_STMT, NULL_TREE,
1625604148.25:                                 ~~~~~~~~~~  ^~~~~~~
1625604148.25: c-parse.c:3945:29: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.25: { yyval.ttype = build_stmt (FOR_STMT, NULL_TREE, NULL_TREE,
1625604148.25:                 ~~~~~~~~~~  ^~~~~~~~
1625604148.25: c-parse.c:3978:25: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.25: { add_stmt (build_stmt (EXPR_STMT, yyvsp[-1].ttype)); ;
1625604148.25:             ~~~~~~~~~~  ^~~~~~~~~
1625604148.25: c-parse.c:4047:45: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.25:                       yyval.ttype = add_stmt (build_stmt (GOTO_STMT, decl));
1625604148.25:                                               ~~~~~~~~~~  ^~~~~~~~~
1625604148.25: c-parse.c:4059:41: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.25:                   yyval.ttype = add_stmt (build_stmt (GOTO_STMT, yyvsp[-1].ttype)); ;
1625604148.25:                                           ~~~~~~~~~~  ^~~~~~~~~
1625604148.25: c-parse.c:4087:45: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.25:                       yyval.ttype = add_stmt (build_stmt (LABEL_STMT, label));
1625604148.25:                                               ~~~~~~~~~~  ^~~~~~~~~~
1625604148.30: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-common.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-common.c
1625604148.32: c-decl.c:3928:22: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.32:   stmt = build_stmt (DECL_STMT, decl);
1625604148.32:          ~~~~~~~~~~  ^~~~~~~~~
1625604148.32: c-decl.c:3929:21: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.32:   complit = build1 (COMPOUND_LITERAL_EXPR, TREE_TYPE (decl), stmt);
1625604148.32:             ~~~~~~  ^~~~~~~~~~~~~~~~~~~~~
1625604148.33: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-format.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-format.c
1625604148.33: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.33: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.34: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-semantics.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-semantics.c
1625604148.35: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o c-objc-common.o -DSPEC_CPU -DNDEBUG -I.   -O2                c-objc-common.c
1625604148.35: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.35: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.35: clang-12clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.35: : clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.35: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.35: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.37: c-decl.c:7457:32: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.37:   stmt = add_stmt (build_stmt (COMPOUND_STMT, NULL_TREE));
1625604148.37:                    ~~~~~~~~~~  ^~~~~~~~~~~~~
1625604148.43: c-semantics.c:60:18: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.43:   *t = build_nt (EXPR_STMT, void_zero_node);
1625604148.43:        ~~~~~~~~  ^~~~~~~~~
1625604148.44: c-semantics.c:80:25: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.44:           tree pos = build_nt (FILE_STMT, get_identifier (input_filename));
1625604148.44:                      ~~~~~~~~  ^~~~~~~~~
1625604148.44: c-semantics.c:110:27: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.44:   decl_stmt = build_stmt (DECL_STMT, decl);
1625604148.44:               ~~~~~~~~~~  ^~~~~~~~~
1625604148.44: c-semantics.c:134:20: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.44:   ss = build_stmt (SCOPE_STMT, NULL_TREE);
1625604148.44:        ~~~~~~~~~~  ^~~~~~~~~~
1625604148.45: c-semantics.c:478:23: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.45:   return (build_stmt (RETURN_STMT, expr));
1625604148.45:           ~~~~~~~~~~  ^~~~~~~~~~~
1625604148.45: c-semantics.c:553:23: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.45: c-typeck.c:3159:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.45:     case COMPOUND_LITERAL_EXPR:
1625604148.45:          ^
1625604148.45:   return (build_stmt (BREAK_STMT));
1625604148.45:           ~~~~~~~~~~  ^~~~~~~~~~
1625604148.46: c-objc-common.cc-semantics.c:571:23: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.46: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o main.o -DSPEC_CPU -DNDEBUG -I.   -O2                main.c
1625604148.46:   return (build_stmt (CONTINUE_STMT));
1625604148.46:           ~~~~~~~~~~  ^~~~~~~~~~~~~
1625604148.46: c-typeck.c:3315:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.46:       case COMPOUND_LITERAL_EXPR:
1625604148.46:            ^
1625604148.46: c-semantics.c:658:22: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.47:   return build_stmt (CASE_LABEL, low_value, high_value, label_decl);:109:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.47:     case DECL_STMT:
1625604148.47:          ^
1625604148.47: c-objc-common.c:116:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.47:     case GOTO_STMT:
1625604148.47:          ^

1625604148.47:          ~~~~~~~~~~  ^~~~~~~~~~
1625604148.47: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.47: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.47: c-semantics.c:785:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.47:         case EXPR_STMT:
1625604148.47:              ^
1625604148.47: c-semantics.c:812:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.47:         case COMPOUND_STMT:
1625604148.47:              ^
1625604148.47: c-semantics.c:792:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.47:         case DECL_STMT:
1625604148.47:              ^
1625604148.47: c-semantics.c:808:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.47:         case IF_STMT:
1625604148.47:              ^
1625604148.48: c-semantics.c:796:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case FOR_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:c-common.c:374:19: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.48:   r = build_stmt (IF_STMT, NULL_TREE, NULL_TREE, NULL_TREE);
1625604148.48:       ~~~~~~~~~~  ^~~~~~~
1625604148.48: 800c-common.c:390:19: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.48:   r = build_stmt (WHILE_STMT, NULL_TREE, NULL_TREE);
1625604148.48:       ~~~~~~~~~~  ^~~~~~~~~~
1625604148.48: :7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case WHILE_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.cc-common.c:449:26: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.48:       body = build_stmt (COMPOUND_STMT, body);
1625604148.48:              ~~~~~~~~~~  ^~~~~~~~~~~~~
1625604148.48: :804:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case DO_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:781:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case RETURN_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:816:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case BREAK_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:820:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case CONTINUE_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:824:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case SWITCH_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:836:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case GOTO_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:832:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case LABEL_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:840:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case ASM_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:846:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case SCOPE_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:777:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case FILE_STMT:
1625604148.48:              ^
1625604148.48: c-semantics.c:828:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case CASE_LABEL:
1625604148.48:              ^
1625604148.48: c-semantics.c:850:7: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.48:         case CLEANUP_STMT:
1625604148.48:              ^
1625604148.50: c-common.c:1257:32: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.50:   return add_stmt (build_stmt (EXPR_STMT, expr));
1625604148.50:                    ~~~~~~~~~~  ^~~~~~~~~
1625604148.52: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cpplib.o -DSPEC_CPU -DNDEBUG -I.   -O2                cpplib.c
1625604148.53: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.53: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.55: 2 warnings generated.
1625604148.55: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cpplex.o -DSPEC_CPU -DNDEBUG -I.   -O2                cpplex.c
1625604148.56: c-typeck.c:6891:36: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.56:       stmt = add_stmt (build_stmt (ASM_STMT, NULL_TREE, expr,
1625604148.56:                        ~~~~~~~~~~  ^~~~~~~~
1625604148.56: 26 warnings generated.
1625604148.56: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cppmacro.o -DSPEC_CPU -DNDEBUG -I.   -O2                cppmacro.c
1625604148.56: In file included from c-common.c:2831:
1625604148.56: ./builtins.def:145:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.56: DEF_EXT_LIB_BUILTIN(BUILT_IN_ALLOCA,
1625604148.56: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.56: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.56:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.56:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.56: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.56:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.56:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-typeck.c./builtins.def:145:1: note:6968:32: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.57: : use array indexing to silence this warning
1625604148.57: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.57:   return add_stmt (build_stmt (ASM_STMT, cv_qualifier, string,
1625604148.57:                    ~~~~~~~~~~  ^~~~~~~~
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                           ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:145:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_EXT_LIB_BUILTIN(BUILT_IN_ALLOCA,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:145:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                         ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:150:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_ABS,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:150:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                           ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:150:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_ABS,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:150:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                         ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:153:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_LABS,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:153:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                           ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:153:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_LABS,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:153:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                         ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:157:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABS,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:157:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                           ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:157:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABS,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:157:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                         ^
1625604148.57: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.57: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.57: c-typeck.c:7185:33: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604148.57:   cs->switch_stmt = build_stmt (SWITCH_STMT, exp, NULL_TREE, orig_type);
1625604148.57:                     ~~~~~~~~~~  ^~~~~~~~~~~
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:160:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSF,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:160:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                           ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:160:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSF,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:160:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                    NAME + strlen ("__builtin_"),        \
1625604148.57:                                         ^
1625604148.57: In file included from c-common.c:2831:
1625604148.57: ./builtins.def:163:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.57: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSL,
1625604148.57: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.57: ./builtins.def:163:1: note: use array indexing to silence this warning
1625604148.57: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.57:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.57:   ^
1625604148.57: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.57:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.57:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:163:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_LIB_ALWAYS_BUILTIN(BUILT_IN_FABSL,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:163:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:97:3: note: expanded from macro 'DEF_LIB_ALWAYS_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:167:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_LLABS,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:167:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:167:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_LLABS,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:167:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:170:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_IMAXABS,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:170:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:170:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_IMAXABS,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:170:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:173:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CONJ,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:173:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:173:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CONJ,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:173:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:176:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CONJF,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:176:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:176:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CONJF,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:176:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:179:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CONJL,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:179:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:179:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CONJL,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:179:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:182:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CREAL,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:182:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:182:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CREAL,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:182:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:185:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CREALF,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:185:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:185:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CREALF,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:185:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                    NAME + strlen ("__builtin_"),        \
1625604148.58:                                         ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:188:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CREALL,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:188:1: note: use array indexing to silence this warning
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.58:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.58:   ^
1625604148.58: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.58:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.58:                                           ^
1625604148.58: In file included from c-common.c:2831:
1625604148.58: ./builtins.def:188:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.58: DEF_C99_BUILTIN(BUILT_IN_CREALL,
1625604148.58: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.58: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:188:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:191:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_C99_BUILTIN(BUILT_IN_CIMAG,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:191:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:191:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_C99_BUILTIN(BUILT_IN_CIMAG,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:191:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:194:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_C99_BUILTIN(BUILT_IN_CIMAGF,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:194:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:194:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_C99_BUILTIN(BUILT_IN_CIMAGF,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:194:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:197:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_C99_BUILTIN(BUILT_IN_CIMAGL,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:197:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:197:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_C99_BUILTIN(BUILT_IN_CIMAGL,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:197:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:113:3: note: expanded from macro 'DEF_C99_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:214:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_BUILTIN (BUILT_IN_BZERO,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:214:1: note: use array indexing to silence this warning
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:214:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_BUILTIN (BUILT_IN_BZERO,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:214:1: note: use array indexing to silence this warning
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:220:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_BUILTIN (BUILT_IN_BCMP,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: cpplib.c:202:18: warning: incompatible pointer types initializing 'const U_CHAR *' (aka 'const unsigned char *') with an expression of type 'unsigned int [2]' [-Wincompatible-pointer-types]./builtins.def
1625604148.59: :220:1: note: use array indexing to silence this warning
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:   do_linemarker, U"#", 1, KANDR, IN_I
1625604148.59:                  ^~~~
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:220:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_BUILTIN (BUILT_IN_BCMP,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:220:1: note: use array indexing to silence this warning
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:227:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_EXT_LIB_BUILTIN(BUILT_IN_FFS,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:227:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:227:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_EXT_LIB_BUILTIN(BUILT_IN_FFS,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:227:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:230:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_EXT_LIB_BUILTIN(BUILT_IN_INDEX,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:230:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:230:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_EXT_LIB_BUILTIN(BUILT_IN_INDEX,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:230:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:233:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_EXT_LIB_BUILTIN(BUILT_IN_RINDEX,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:233:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:233:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_EXT_LIB_BUILTIN(BUILT_IN_RINDEX,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:233:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:106:3: note: expanded from macro 'DEF_EXT_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:237:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_LIB_BUILTIN(BUILT_IN_MEMCPY,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:237:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.59:                                           ^
1625604148.59: In file included from c-common.c:2831:
1625604148.59: ./builtins.def:237:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.59: DEF_LIB_BUILTIN(BUILT_IN_MEMCPY,
1625604148.59: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.59: ./builtins.def:237:1: note: use array indexing to silence this warning
1625604148.59: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.59:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.59:   ^
1625604148.59: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.59:                                    NAME + strlen ("__builtin_"),        \
1625604148.59:                                         ^
1625604148.59: cpplib.c:564:9: warning: incompatible pointer types assigning to 'const unsigned char *' from 'unsigned int [18]' [-Wincompatible-pointer-types]
1625604148.59:     dir = U"pragma dependency";
1625604148.59:         ^ ~~~~~~~~~~~~~~~~~~~~
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:240:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_MEMCMP,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:240:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                           ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:240:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_MEMCMP,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:240:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                         ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:243:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_MEMSET,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:243:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                           ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:243:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_MEMSET,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:243:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                         ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:247:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_STRCAT,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:247:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                           ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:247:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_STRCAT,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:247:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                         ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:250:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_STRNCAT,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:250:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                           ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:250:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_STRNCAT,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:250:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                         ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:253:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_STRCPY,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:253:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                           ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:253:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_STRCPY,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:253:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                    NAME + strlen ("__builtin_"),        \
1625604148.60:                                         ^
1625604148.60: In file included from c-common.c:2831:
1625604148.60: ./builtins.def:256:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.60: DEF_LIB_BUILTIN(BUILT_IN_STRNCPY,
1625604148.60: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.60: ./builtins.def:256:1: note: use array indexing to silence this warning
1625604148.60: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.60:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.60:   ^
1625604148.60: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.60:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.60:                                           ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:256:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRNCPY,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:256:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                         ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:259:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRCMP,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:259:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                           ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:259:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRCMP,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:259:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                         ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:262:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRNCMP,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:262:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                           ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:262:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRNCMP,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:262:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                         ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:265:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRLEN,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:265:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                           ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:265:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRLEN,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:265:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                         ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:268:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRSTR,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:268:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                           ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:268:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRSTR,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:268:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                         ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:271:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRPBRK,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:271:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                           ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:271:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRPBRK,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:271:1: note: use array indexing to silence this warning
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^
1625604148.61: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                    NAME + strlen ("__builtin_"),        \
1625604148.61:                                         ^
1625604148.61: In file included from c-common.c:2831:
1625604148.61: ./builtins.def:274:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.61: DEF_LIB_BUILTIN(BUILT_IN_STRSPN,
1625604148.61: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.61:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.61:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.61: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.61:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.61:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:274:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                           ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:274:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_STRSPN,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:274:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                         ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:277:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_STRCSPN,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:277:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                           ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:277:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_STRCSPN,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:277:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                         ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:280:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_STRCHR,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:280:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                           ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:280:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_STRCHR,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:280:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                         ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:283:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_STRRCHR,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:283:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                           ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:283:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_STRRCHR,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:283:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                         ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:287:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_SQRT,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:287:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                           ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:287:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_SQRT,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:287:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                         ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:290:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_SIN,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:290:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.62: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.62:                                           ^
1625604148.62: In file included from c-common.c:2831:
1625604148.62: ./builtins.def:290:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.62: DEF_LIB_BUILTIN(BUILT_IN_SIN,
1625604148.62: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.62:                                    NAME + strlen ("__builtin_"),        \
1625604148.62:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.62: ./builtins.def:290:1: note: use array indexing to silence this warning
1625604148.62: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.62:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.62:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:293:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_COS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:293:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:293:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_COS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:293:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:296:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SQRTF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:296:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:296:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SQRTF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:296:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:299:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SINF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:299:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:299:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SINF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:299:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:302:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_COSF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:302:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:302:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_COSF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:302:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:305:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SQRTL,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:305:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:305:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SQRTL,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:305:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:308:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SINL,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:308:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:308:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_SINL,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:308:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:311:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_COSL,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:311:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:311:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_LIB_BUILTIN(BUILT_IN_COSL,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:311:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:90:3: note: expanded from macro 'DEF_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:321:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_SAVEREGS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:321:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:321:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_SAVEREGS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:321:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:324:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_CLASSIFY_TYPE,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:324:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:324:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_CLASSIFY_TYPE,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:324:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:327:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_NEXT_ARG,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:327:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:327:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_NEXT_ARG,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:327:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:330:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_ARGS_INFO,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:330:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:330:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_ARGS_INFO,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:330:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:333:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_CONSTANT_P, 
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:333:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:333:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_CONSTANT_P, 
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:333:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:336:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_FRAME_ADDRESS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:336:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:336:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_FRAME_ADDRESS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:336:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:339:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_RETURN_ADDRESS, 
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:339:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:339:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_RETURN_ADDRESS, 
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:339:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:342:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_AGGREGATE_INCOMING_ADDRESS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:342:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:342:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_AGGREGATE_INCOMING_ADDRESS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:342:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:345:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_APPLY_ARGS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:345:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:345:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_APPLY_ARGS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:345:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:348:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_APPLY,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:348:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:348:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_APPLY,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:348:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:351:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_RETURN,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:351:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:351:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_RETURN,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:351:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:354:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_SETJMP,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:354:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:354:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_SETJMP,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:354:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:357:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_LONGJMP,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:357:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:357:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_LONGJMP,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:357:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:360:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_TRAP,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:360:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:360:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_TRAP,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:360:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:363:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_PREFETCH,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:363:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:363:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_GCC_BUILTIN(BUILT_IN_PREFETCH,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:363:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:368:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:368:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:368:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:368:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:371:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_FALLBACK_BUILTIN(BUILT_IN_PUTS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:371:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:371:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_FALLBACK_BUILTIN(BUILT_IN_PUTS,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:371:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:374:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:374:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.64:   ^
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                           ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:374:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:374:1: note: use array indexing to silence this warning
1625604148.64: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.64:   ^
1625604148.64: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                    NAME + strlen ("__builtin_"),        \
1625604148.64:                                         ^
1625604148.64: In file included from c-common.c:2831:
1625604148.64: ./builtins.def:377:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.64: DEF_FALLBACK_BUILTIN(BUILT_IN_FPUTC,
1625604148.64: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.64:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.64:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.64: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.64:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.64:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:377:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:377:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_FALLBACK_BUILTIN(BUILT_IN_FPUTC,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:377:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:384:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_BUILTIN (BUILT_IN_FPUTS,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:384:1: note: use array indexing to silence this warning
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:384:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_BUILTIN (BUILT_IN_FPUTS,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:384:1: note: use array indexing to silence this warning
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:390:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_FALLBACK_BUILTIN(BUILT_IN_FWRITE,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:390:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:390:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_FALLBACK_BUILTIN(BUILT_IN_FWRITE,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:390:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:70:3: note: expanded from macro 'DEF_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:393:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:393:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:393:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:393:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:120:3: note: expanded from macro 'DEF_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:399:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:399:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:399:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTCHAR_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:399:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:402:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTS_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:402:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:402:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_PUTS_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:402:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:405:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:405:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:405:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_PRINTF_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69: cpplex.c:59  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \:
1625604148.69: 3  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~:
1625604148.69:  warning: incompatible pointer types initializing 'const unsigned char *const' with an expression of type 'unsigned int [3]' [-Wincompatible-pointer-types]c-common.c
1625604148.69: :2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~{ U"%:", U"%:%:", U"<:", U":>", U"<%", U"%>" };

1625604148.69:   ^~~~~
1625604148.69: cpplex.c:59:10: warning: incompatible pointer types initializing 'const unsigned char *const' with an expression of type 'unsigned int [5]' [-Wincompatible-pointer-types]./builtins.def
1625604148.69: :405:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:129:3{ U"%:", U"%:%:", U"<:", U":>", U"<%", U"%>" };:
1625604148.69:           ^~~~~~~note
1625604148.69: : expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69: cpplex.c:59:19: warning  DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \: 
1625604148.69: incompatible pointer types initializing 'const unsigned char *const' with an expression of type 'unsigned int [3]' [-Wincompatible-pointer-types]  ^

1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69: { U"%:", U"%:%:", U"<:", U":>", U"<%", U"%>" };
1625604148.69:                   ^~~~~
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: cpplex.c:59:26: warning: incompatible pointer types initializing 'const unsigned char *const' with an expression of type 'unsigned int [3]' [-Wincompatible-pointer-types]
1625604148.69: { U"%:", U"%:%:", U"<:", U":>", U"<%", U"%>" };
1625604148.69:                          ^~~~~
1625604148.69: cpplex.c:59:33: warning: incompatible pointer types initializing 'const unsigned char *const' with an expression of type 'unsigned int [3]' [-Wincompatible-pointer-types]
1625604148.69: { U"%:", U"%:%:", U"<:", U":>", U"<%", U"%>" };
1625604148.69:                                 ^~~~~
1625604148.69: cpplex.c:59:40: warning: incompatible pointer types initializing 'const unsigned char *const' with an expression of type 'unsigned int [3]' [-Wincompatible-pointer-types]
1625604148.69: { U"%:", U"%:%:", U"<:", U":>", U"<%", U"%>" };
1625604148.69:                                        ^~~~~
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:408:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FPUTC_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:408:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:408:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FPUTC_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:408:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:415:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_BUILTIN (BUILT_IN_FPUTS_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:415:1: note: use array indexing to silence this warning
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:415:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_BUILTIN (BUILT_IN_FPUTS_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:415:1: note: use array indexing to silence this warning
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:421:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FWRITE_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:421:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:421:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FALLBACK_BUILTIN(BUILT_IN_FWRITE_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:421:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:79:3: note: expanded from macro 'DEF_EXT_FALLBACK_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, TYPE, \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:424:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:424:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:424:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_EXT_FRONT_END_LIB_BUILTIN(BUILT_IN_FPRINTF_UNLOCKED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:424:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:129:3: note: expanded from macro 'DEF_EXT_FRONT_END_LIB_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_FRONTEND, TYPE, TYPE,       \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:429:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISGREATER, 
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:429:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:429:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISGREATER, 
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:429:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:432:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISGREATEREQUAL,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:432:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:432:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISGREATEREQUAL,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:432:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:435:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISLESS,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:435:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:435:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISLESS,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:435:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:438:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISLESSEQUAL,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:438:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:438:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISLESSEQUAL,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:438:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:441:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISLESSGREATER,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:441:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:441:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISLESSGREATER,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:441:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:444:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISUNORDERED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:444:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:444:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_ISUNORDERED,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:444:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:449:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_UNWIND_INIT,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:449:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:449:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_UNWIND_INIT,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:449:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:452:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_DWARF_CFA,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:452:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:452:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_DWARF_CFA,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:452:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:455:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_DWARF_FP_REGNUM,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:455:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:455:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_DWARF_FP_REGNUM,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:455:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:458:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_INIT_DWARF_REG_SIZES,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:458:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:458:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_INIT_DWARF_REG_SIZES,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:458:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:461:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_FROB_RETURN_ADDR,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:461:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:461:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_FROB_RETURN_ADDR,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:461:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:464:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EXTRACT_RETURN_ADDR,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:464:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:464:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EXTRACT_RETURN_ADDR,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:464:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:467:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:467:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:467:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:467:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:470:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN_DATA_REGNO,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:470:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:470:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EH_RETURN_DATA_REGNO,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:470:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:474:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_VARARGS_START,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:474:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:474:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_VARARGS_START,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:474:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:477:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_STDARG_START,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:477:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:477:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_STDARG_START,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:477:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:480:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_VA_END,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:480:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:480:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_VA_END,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:480:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:483:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_VA_COPY,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:483:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:483:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_VA_COPY,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:483:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:486:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EXPECT,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                      ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:486:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2816:15: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                   ? (NAME + strlen ("__builtin_"))      \
1625604148.69:                                           ^
1625604148.69: In file included from c-common.c:2831:
1625604148.69: ./builtins.def:486:1: warning: adding 'unsigned int' to a string does not append to the string [-Wstring-plus-int]
1625604148.69: DEF_GCC_BUILTIN(BUILT_IN_EXPECT,
1625604148.69: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                    ~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604148.69: ./builtins.def:486:1: note: use array indexing to silence this warning
1625604148.69: ./builtins.def:60:3: note: expanded from macro 'DEF_GCC_BUILTIN'
1625604148.69:   DEF_BUILTIN (ENUM, NAME, BUILT_IN_NORMAL, TYPE, BT_LAST,      \
1625604148.69:   ^
1625604148.69: c-common.c:2820:13: note: expanded from macro 'DEF_BUILTIN'
1625604148.69:                                    NAME + strlen ("__builtin_"),        \
1625604148.69:                                         ^
1625604148.72: c-common.c:3207:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case EXPR_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3208:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case COMPOUND_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3209:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case DECL_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3210:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case IF_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3211:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case FOR_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3212:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case WHILE_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3213:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case DO_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3214:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case RETURN_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3215:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case BREAK_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3216:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case CONTINUE_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3218:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case SWITCH_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3219:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case GOTO_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3220:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case LABEL_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3221:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case ASM_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3217:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case SCOPE_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3222:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case FILE_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3223:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case CASE_LABEL:
1625604148.72:          ^
1625604148.72: c-common.c:3206:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case CLEANUP_STMT:
1625604148.72:          ^
1625604148.72: c-common.c:3562:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case STMT_EXPR:
1625604148.72:          ^
1625604148.72: c-common.c:3636:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604148.72:     case COMPOUND_LITERAL_EXPR:
1625604148.72:          ^
1625604148.82: 8 warnings generated.
1625604148.83: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cppexp.o -DSPEC_CPU -DNDEBUG -I.   -O2                cppexp.c
1625604148.84: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.84: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.89: 2 warnings generated.
1625604148.89: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cppfiles.o -DSPEC_CPU -DNDEBUG -I.   -O2                cppfiles.c
1625604148.92: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.92: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604148.98: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cpphash.o -DSPEC_CPU -DNDEBUG -I.   -O2                cpphash.c
1625604148.99: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604148.99: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.00: cppfiles.c:393:29: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
1625604149.00:       if (inc->st.st_size > INTTYPE_MAXIMUM (ssize_t))
1625604149.00:                             ^~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.00: ./system.h:192:44: note: expanded from macro 'INTTYPE_MAXIMUM'
1625604149.00: #define INTTYPE_MAXIMUM(t) ((t) (~ (t) 0 - INTTYPE_MINIMUM (t)))
1625604149.00:                                            ^~~~~~~~~~~~~~~~~~~
1625604149.00: ./system.h:191:40: note: expanded from macro 'INTTYPE_MINIMUM'
1625604149.00:                              ? ~ (t) 0 << (sizeof(t) * CHAR_BIT - 1) : (t) 0))
1625604149.00:                                ~~~~~~~ ^
1625604149.00: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cpperror.o -DSPEC_CPU -DNDEBUG -I.   -O2                cpperror.c
1625604149.01: 6 warnings generated.
1625604149.02: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cppinit.o -DSPEC_CPU -DNDEBUG -I.   -O2                cppinit.c
1625604149.03: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cppdefault.o -DSPEC_CPU -DNDEBUG -I.   -O2                cppdefault.c
1625604149.03: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.03: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.03: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.03: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.06: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o line-map.o -DSPEC_CPU -DNDEBUG -I.   -O2                line-map.c
1625604149.06: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.06: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.10: 1 warning generated.
1625604149.10: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o mkdeps.o -DSPEC_CPU -DNDEBUG -I.   -O2                mkdeps.c
1625604149.11: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.11: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.11: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.11: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.11: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o prefix.o -DSPEC_CPU -DNDEBUG -I.   -O2                prefix.c
1625604149.12: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.12: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.14: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o version.o -DSPEC_CPU -DNDEBUG -I.   -O2                version.c
1625604149.16: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.16: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.17: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o mbchar.o -DSPEC_CPU -DNDEBUG -I.   -O2                mbchar.c
1625604149.19: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o alias.o -DSPEC_CPU -DNDEBUG -I.   -O2                alias.c
1625604149.19: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o bb-reorder.o -DSPEC_CPU -DNDEBUG -I.   -O2                bb-reorder.c
1625604149.20: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.20: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.21: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o bitmap.o -DSPEC_CPU -DNDEBUG -I.   -O2                bitmap.c
1625604149.21: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.21: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.22: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.22: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.23: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o builtins.o -DSPEC_CPU -DNDEBUG -I.   -O2                builtins.c
1625604149.23: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.23: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.25: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.25: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.29: 3 warnings generated.
1625604149.30: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o caller-save.o -DSPEC_CPU -DNDEBUG -I.   -O2                caller-save.c
1625604149.31: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.31: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.32: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o calls.o -DSPEC_CPU -DNDEBUG -I.   -O2                calls.c
1625604149.33: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.33: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.34: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cfg.o -DSPEC_CPU -DNDEBUG -I.   -O2                cfg.c
1625604149.35: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.35: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.40: 214 warnings generated.
1625604149.41: calls.c:613:48: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.41:     REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_EH_REGION, const0_rtx,
1625604149.41:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.41: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.41:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.41:   ~~~~~~~~~~~~~~              ^~~~
1625604149.41: calls.c:617:48: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.41:     REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_NORETURN, const0_rtx,
1625604149.41:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.41: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.41:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.41:   ~~~~~~~~~~~~~~              ^~~~
1625604149.41: calls.c:620:48: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.41:     REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_ALWAYS_RETURN, const0_rtx,
1625604149.41:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.41: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.41:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.41:   ~~~~~~~~~~~~~~              ^~~~
1625604149.41: calls.c:625:50: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.41:       REG_NOTES (call_insn) = gen_rtx_EXPR_LIST (REG_SETJMP, const0_rtx,
1625604149.41:                               ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604149.41: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.41:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.41:   ~~~~~~~~~~~~~~              ^~~~
1625604149.41: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cfganal.o -DSPEC_CPU -DNDEBUG -I.   -O2                cfganal.c
1625604149.43: calls.c:3123:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.43:             gen_rtx_EXPR_LIST (REG_NOALIAS, temp, REG_NOTES (last));
1625604149.43:             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.43: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.43:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.43:   ~~~~~~~~~~~~~~              ^~~~
1625604149.43: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.43: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.47: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cfgbuild.o -DSPEC_CPU -DNDEBUG -I.   -O2                cfgbuild.c
1625604149.48: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.48: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.55: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cfgcleanup.o -DSPEC_CPU -DNDEBUG -I.   -O2                cfgcleanup.c
1625604149.56: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.56: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.61: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cfglayout.o -DSPEC_CPU -DNDEBUG -I.   -O2                cfglayout.c
1625604149.62: 5 warnings generated.
1625604149.62: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cfgloop.o -DSPEC_CPU -DNDEBUG -I.   -O2                cfgloop.c
1625604149.63: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.63: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.65: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.65: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.68: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cfgrtl.o -DSPEC_CPU -DNDEBUG -I.   -O2                cfgrtl.c
1625604149.69: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o combine.o -DSPEC_CPU -DNDEBUG -I.   -O2                combine.c
1625604149.69: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.69: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.69: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.69: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.73: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o conflict.o -DSPEC_CPU -DNDEBUG -I.   -O2                conflict.c
1625604149.73: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.73: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.78: combine.c:2718:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.79:           distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i3dest_killed,
1625604149.79:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
1625604149.79: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.79:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.79:   ~~~~~~~~~~~~~~              ^~~~
1625604149.79: combine.c:2722:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.79:           distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i3dest_killed,
1625604149.79:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
1625604149.79: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.79:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.79:   ~~~~~~~~~~~~~~              ^~~~
1625604149.79: combine.c:2734:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.79:           distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i2dest, NULL_RTX),
1625604149.79:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.79: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.79:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.79:   ~~~~~~~~~~~~~~              ^~~~
1625604149.79: combine.c:2737:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.79:           distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i2dest, NULL_RTX),
1625604149.79:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.79: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.79:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.79:   ~~~~~~~~~~~~~~              ^~~~
1625604149.79: combine.c:2748:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.80:           distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i1dest, NULL_RTX),
1625604149.81:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.81: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.81:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.81:   ~~~~~~~~~~~~~~              ^~~~
1625604149.81: combine.c:2751:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.81:           distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i1dest, NULL_RTX),
1625604149.81:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.81: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.81:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.81:   ~~~~~~~~~~~~~~              ^~~~
1625604149.85: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o convert.o -DSPEC_CPU -DNDEBUG -I.   -O2                convert.c
1625604149.85: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cse.o -DSPEC_CPU -DNDEBUG -I.   -O2                cse.c
1625604149.86: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.86: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.88: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.88: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.88: 5 warnings generated.
1625604149.88: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o cselib.o -DSPEC_CPU -DNDEBUG -I.   -O2                cselib.c
1625604149.89: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.89: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o dbxout.o -DSPEC_CPU -DNDEBUG -I.   -O2                dbxout.c
1625604149.89: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.90: combine.c:9741:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.90:           notes = gen_rtx_EXPR_LIST (REG_UNUSED,
1625604149.90:                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
1625604149.90: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.90:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.90:   ~~~~~~~~~~~~~~              ^~~~
1625604149.92: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.92: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604149.93: combine.c:11918:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.93:                     = gen_rtx_EXPR_LIST (REG_DEAD,
1625604149.93:                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
1625604149.93: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.93:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.93:   ~~~~~~~~~~~~~~              ^~~~
1625604149.94: combine.c:11956:35: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.94:             *pnotes = gen_rtx_EXPR_LIST (REG_DEAD, x, *pnotes);
1625604149.94:                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604149.94: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.94:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.94:   ~~~~~~~~~~~~~~              ^~~~
1625604149.94: combine.c:12446:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.94:                               = gen_rtx_EXPR_LIST (REG_UNUSED, XEXP (note, 0),
1625604149.94:                                 ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.94: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.94:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.95:   ~~~~~~~~~~~~~~              ^~~~
1625604149.95: combine.c:12576:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.95:                                 = gen_rtx_EXPR_LIST (REG_DEAD, piece, NULL_RTX);
1625604149.95:                                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.95: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.95:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.95:   ~~~~~~~~~~~~~~              ^~~~
1625604149.95: combine.c:12603:32: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.95:                                       = gen_rtx_EXPR_LIST (REG_UNUSED, piece,
1625604149.95:                                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
1625604149.95: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604149.95:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604149.95:   ~~~~~~~~~~~~~~              ^~~~
1625604149.95: combine.c:12641:13: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604149.95:                                                REG_NOTE_KIND (note),
1625604149.95:                                                ^~~~~~~~~~~~~~~~~~~~
1625604149.96: ./rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
1625604149.96: #define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
1625604149.96:                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604149.98: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o debug.o -DSPEC_CPU -DNDEBUG -I.   -O2                debug.c
1625604149.98: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604149.98: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.03: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o dependence.o -DSPEC_CPU -DNDEBUG -I.   -O2                dependence.c
1625604150.04: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.04: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.05: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o df.o -DSPEC_CPU -DNDEBUG -I.   -O2                df.c
1625604150.07: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.07: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.08: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o diagnostic.o -DSPEC_CPU -DNDEBUG -I.   -O2                diagnostic.c
1625604150.09: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.09: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.11: dependence.c:392:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604150.11:       case EXPR_STMT:
1625604150.11:            ^
1625604150.11: dependence.c:284:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604150.11:       case COMPOUND_STMT:
1625604150.11:            ^
1625604150.11: dependence.c:388:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604150.11:       case DECL_STMT:
1625604150.11:            ^
1625604150.11: dependence.c:294:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604150.11:       case FOR_STMT:
1625604150.11:            ^
1625604150.11: dependence.c:387:12: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604150.11:       case SCOPE_STMT:
1625604150.11:            ^
1625604150.13: cse.c:5723:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.13:                           = gen_rtx_INSN_LIST (REG_WAS_0, const_insn,
1625604150.13:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
1625604150.13: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604150.13:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604150.13:   ~~~~~~~~~~~~~~              ^~~~
1625604150.18: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o doloop.o -DSPEC_CPU -DNDEBUG -I.   -O2                doloop.c
1625604150.18: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.18: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.24: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o dominance.o -DSPEC_CPU -DNDEBUG -I.   -O2                dominance.c
1625604150.25: doloop.c:528:23: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.25:         = gen_rtx_EXPR_LIST (REG_NONNEG, NULL_RTX, REG_NOTES (jump_insn));
1625604150.25:           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604150.25: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604150.25:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604150.25:   ~~~~~~~~~~~~~~              ^~~~
1625604150.27: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.27: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.34: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o dwarf2asm.o -DSPEC_CPU -DNDEBUG -I.   -O2                dwarf2asm.c
1625604150.35: 1 warning generated.
1625604150.35: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o dwarf2out.o -DSPEC_CPU -DNDEBUG -I.   -O2                dwarf2out.c
1625604150.35: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.35: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.36: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.36: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.40: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o dwarfout.o -DSPEC_CPU -DNDEBUG -I.   -O2                dwarfout.c
1625604150.43: 5 warnings generated.
1625604150.43: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o emit-rtl.o -DSPEC_CPU -DNDEBUG -I.   -O2                emit-rtl.c
1625604150.43: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.43: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.44: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.44: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.45: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o except.o -DSPEC_CPU -DNDEBUG -I.   -O2                except.c
1625604150.46: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.46: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.50: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o explow.o -DSPEC_CPU -DNDEBUG -I.   -O2                explow.c
1625604150.51: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.51: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.54: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o expmed.o -DSPEC_CPU -DNDEBUG -I.   -O2                expmed.c
1625604150.54: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.54: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.58: emit-rtl.c:3155:30: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.58:                       = gen_rtx_EXPR_LIST (REG_BR_PROB,
1625604150.58:                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
1625604150.58: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604150.58:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604150.58:   ~~~~~~~~~~~~~~              ^~~~
1625604150.58: emit-rtl.c:3182:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.58:                           = gen_rtx_EXPR_LIST (REG_EH_REGION,
1625604150.58:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
1625604150.58: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604150.58:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604150.58:   ~~~~~~~~~~~~~~              ^~~~
1625604150.58: emit-rtl.c:3196:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.58:                           = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),
1625604150.58:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604150.58: ./rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
1625604150.58: #define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
1625604150.58:                              ^
1625604150.58: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604150.59:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604150.59:   ~~~~~~~~~~~~~~              ^~~~
1625604150.59: emit-rtl.c:3208:27: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.59:                           = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),
1625604150.59:                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604150.59: ./rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
1625604150.59: #define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
1625604150.59:                              ^
1625604150.59: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604150.59:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604150.59:   ~~~~~~~~~~~~~~              ^~~~
1625604150.61: emit-rtl.c:4355:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.61:   REG_NOTES (insn) = gen_rtx_EXPR_LIST (kind, datum, REG_NOTES (insn));
1625604150.61:                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604150.61: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604150.61:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604150.61:   ~~~~~~~~~~~~~~              ^~~~
1625604150.72: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o expr.o -DSPEC_CPU -DNDEBUG -I.   -O2                expr.c
1625604150.73: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604150.73: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604150.88: expr.c:4941:22: warning: implicit conversion from enumeration type 'enum rtx_code' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.88:                                        NULL_RTX, MEM, EXPAND_CONST_ADDRESS);
1625604150.88:                                                  ^~~
1625604150.88: expr.c:4957:52: warning: implicit conversion from enumeration type 'enum rtx_code' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.88:           startbit_rtx = expand_expr (startbit, NULL_RTX, MEM,
1625604150.88:                          ~~~~~~~~~~~                      ^~~
1625604150.88: expr.c:4959:48: warning: implicit conversion from enumeration type 'enum rtx_code' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.88:           endbit_rtx = expand_expr (endbit, NULL_RTX, MEM,
1625604150.88:                        ~~~~~~~~~~~                    ^~~
1625604150.92: expr.c:7146:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604150.92:           = gen_rtx_EXPR_LIST (REG_VTABLE_REF, vtbl_ref, REG_NOTES (insn));
1625604150.92:             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604150.92: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604150.92:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604150.92:   ~~~~~~~~~~~~~~              ^~~~
1625604150.96: expr.c:8895:10: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
1625604150.96:       || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
1625604150.96:          ^                                                            ~
1625604150.96: expr.c:8895:10: note: add parentheses after the '!' to evaluate the comparison first
1625604150.96:       || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
1625604150.96:          ^
1625604150.96:           (                                                              )
1625604150.96: expr.c:8895:10: note: add parentheses around left hand side expression to silence this warning
1625604150.96:       || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
1625604150.97:          ^
1625604150.97:          (                                                           )
1625604150.97: expr.c:8895:71: warning: result of comparison of constant 0 with boolean expression is always false [-Wtautological-constant-compare]
1625604150.97:       || !exact_log2 (tree_low_cst (TREE_OPERAND (offset, 1), 1) + 1) < 0)
1625604150.97:          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~
1625604151.05: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o final.o -DSPEC_CPU -DNDEBUG -I.   -O2                final.c
1625604151.06: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.06: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604151.08: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o flow.o -DSPEC_CPU -DNDEBUG -I.   -O2                flow.c
1625604151.10: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.10: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604151.13: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o fold-const.o -DSPEC_CPU -DNDEBUG -I.   -O2                fold-const.c
1625604151.16: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.16: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604151.22: flow.c:821:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604151.22:                     = gen_rtx_INSN_LIST (REG_LIBCALL, XEXP (note, 0),
1625604151.22:                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604151.22: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604151.22:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604151.23:   ~~~~~~~~~~~~~~              ^~~~
1625604151.27: 5 warnings generated.
1625604151.27: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o function.o -DSPEC_CPU -DNDEBUG -I.   -O2                function.c
1625604151.29: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.29: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604151.43: function.c:5002:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604151.43:                         = gen_rtx_EXPR_LIST (REG_EQUIV,
1625604151.43:                           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
1625604151.43: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604151.43:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604151.43:   ~~~~~~~~~~~~~~              ^~~~
1625604151.44: function.c:5008:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604151.44:                         = gen_rtx_EXPR_LIST (REG_EQUIV,
1625604151.44:                           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
1625604151.44: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604151.44:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604151.44:   ~~~~~~~~~~~~~~              ^~~~
1625604151.44: function.c:5015:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604151.44:                   = gen_rtx_EXPR_LIST (REG_EQUIV,
1625604151.45:                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
1625604151.45: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604151.45:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604151.45:   ~~~~~~~~~~~~~~              ^~~~
1625604151.47: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o gcse.o -DSPEC_CPU -DNDEBUG -I.   -O2                gcse.c
1625604151.48: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.48: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604151.60: gcse.c:5149:45: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604151.60:       REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, XEXP (x, 0),
1625604151.60:                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604151.60: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604151.60:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604151.60:   ~~~~~~~~~~~~~~              ^~~~
1625604151.76: 13 warnings generated.
1625604151.76: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o genrtl.o -DSPEC_CPU -DNDEBUG -I.   -O2                genrtl.c
1625604151.77: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.77: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604151.80: 1 warning generated.
1625604151.81: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o ggc-common.o -DSPEC_CPU -DNDEBUG -I.   -O2                ggc-common.c
1625604151.83: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.83: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604151.90: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o global.o -DSPEC_CPU -DNDEBUG -I.   -O2                global.c
1625604151.91: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604151.91: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.06: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o graph.o -DSPEC_CPU -DNDEBUG -I.   -O2                graph.c
1625604152.07: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.08: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.10: 6 warnings generated.
1625604152.10: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o haifa-sched.o -DSPEC_CPU -DNDEBUG -I.   -O2                haifa-sched.c
1625604152.11: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.11: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.12: 1 warning generated.
1625604152.12: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o hash.o -DSPEC_CPU -DNDEBUG -I.   -O2                hash.c
1625604152.13: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o hashtable.o -DSPEC_CPU -DNDEBUG -I.   -O2                hashtable.c
1625604152.14: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.15: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.16: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.16: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.20: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o hooks.o -DSPEC_CPU -DNDEBUG -I.   -O2                hooks.c
1625604152.21: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.22: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.27: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o ifcvt.o -DSPEC_CPU -DNDEBUG -I.   -O2                ifcvt.c
1625604152.28: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.28: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.28: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o insn-attrtab.o -DSPEC_CPU -DNDEBUG -I.   -O2                insn-attrtab.c
1625604152.28: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o insn-emit.o -DSPEC_CPU -DNDEBUG -I.   -O2                insn-emit.c
1625604152.29: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.29: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.30: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o insn-extract.o -DSPEC_CPU -DNDEBUG -I.   -O2                insn-extract.c
1625604152.31: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.31: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.31: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.31: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.36: insn-attrtab.c:450:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:450:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:           ~           ^              ~
1625604152.36: insn-attrtab.c:450:23: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:                       ^~
1625604152.36:                       =
1625604152.36: insn-attrtab.c:516:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:516:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:           ~           ^              ~
1625604152.36: insn-attrtab.c:516:23: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:                       ^~
1625604152.36:                       =
1625604152.36: insn-attrtab.c:520:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:520:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                ~           ^               ~
1625604152.36: insn-attrtab.c:520:28: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                            ^~
1625604152.36:                            =
1625604152.36: insn-attrtab.c:524:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.36:                 ~~~~~~~~~~~^~~~~~~~~~~
1625604152.36: insn-attrtab.c:524:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.36:                ~           ^          ~
1625604152.36: insn-attrtab.c:524:28: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.36:                            ^~
1625604152.36:                            =
1625604152.36: insn-attrtab.c:545:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:545:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:           ~           ^              ~
1625604152.36: insn-attrtab.c:545:23: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:                       ^~
1625604152.36:                       =
1625604152.36: insn-attrtab.c:549:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:549:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                ~           ^               ~
1625604152.36: insn-attrtab.c:549:28: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                            ^~
1625604152.36:                            =
1625604152.36: insn-attrtab.c:553:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.36:                 ~~~~~~~~~~~^~~~~~~~~~~
1625604152.36: insn-attrtab.c:553:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.36:                ~           ^          ~
1625604152.36: insn-attrtab.c:553:28: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.36:                            ^~
1625604152.36:                            =
1625604152.36: insn-attrtab.c:557:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.36:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:557:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.36:                ~           ^                  ~
1625604152.36: insn-attrtab.c:557:28: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.36:                            ^~
1625604152.36:                            =
1625604152.36: insn-attrtab.c:567:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:567:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:           ~           ^               ~
1625604152.36: insn-attrtab.c:567:23: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                       ^~
1625604152.36:                       =
1625604152.36: insn-attrtab.c:595:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:595:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:           ~           ^              ~
1625604152.36: insn-attrtab.c:595:23: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.36:                       ^~
1625604152.36:                       =
1625604152.36: insn-attrtab.c:599:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.36: insn-attrtab.c:599:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                ~           ^               ~
1625604152.36: insn-attrtab.c:599:28: note: use '=' to turn this equality comparison into an assignment
1625604152.36:       else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.36:                            ^~
1625604152.36:                            =
1625604152.37: insn-attrtab.c:870:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:870:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                ~           ^              ~
1625604152.37: insn-attrtab.c:870:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:878:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~
1625604152.37: insn-attrtab.c:878:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                ~           ^          ~
1625604152.37: insn-attrtab.c:878:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:893:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:893:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                ~           ^              ~
1625604152.37: insn-attrtab.c:893:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:901:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~
1625604152.37: insn-attrtab.c:901:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                ~           ^          ~
1625604152.37: insn-attrtab.c:901:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:941:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:941:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                ~           ^              ~
1625604152.37: insn-attrtab.c:941:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:949:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~
1625604152.37: insn-attrtab.c:949:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                ~           ^          ~
1625604152.37: insn-attrtab.c:949:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:1181:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.37:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:1181:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.37:           ~           ^                  ~
1625604152.37: insn-attrtab.c:1181:23: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.37:                       ^~
1625604152.37:                       =
1625604152.37: insn-attrtab.c:1257:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.37:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:1257:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.37:           ~           ^               ~
1625604152.37: insn-attrtab.c:1257:23: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.37:                       ^~
1625604152.37:                       =
1625604152.37: insn-attrtab.c:1261:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:1261:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                ~           ^              ~
1625604152.37: insn-attrtab.c:1261:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:1291:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.37:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:1291:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.37:           ~           ^               ~
1625604152.37: insn-attrtab.c:1291:23: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.37:                       ^~
1625604152.37:                       =
1625604152.37: insn-attrtab.c:1295:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:1295:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                ~           ^              ~
1625604152.37: insn-attrtab.c:1295:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:1299:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.37: insn-attrtab.c:1299:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.37:                ~           ^                  ~
1625604152.37: insn-attrtab.c:1299:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.37: insn-attrtab.c:1303:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                 ~~~~~~~~~~~^~~~~~~~~~~
1625604152.37: insn-attrtab.c:1303:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                ~           ^          ~
1625604152.37: insn-attrtab.c:1303:28: note: use '=' to turn this equality comparison into an assignment
1625604152.37:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.37:                            ^~
1625604152.37:                            =
1625604152.38: insn-attrtab.c:1475:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.38:       if (((ix86_cpu) == (CPU_K6)))
1625604152.38:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.38: insn-attrtab.c:1475:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.38:       if (((ix86_cpu) == (CPU_K6)))
1625604152.38:           ~           ^          ~
1625604152.38: insn-attrtab.c:1475:23: note: use '=' to turn this equality comparison into an assignment
1625604152.38:       if (((ix86_cpu) == (CPU_K6)))
1625604152.38:                       ^~
1625604152.38:                       =
1625604152.38: insn-attrtab.c:1618:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.38:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.38:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.38: insn-attrtab.c:1618:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.38:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.38:           ~           ^              ~
1625604152.38: insn-attrtab.c:1618:23: note: use '=' to turn this equality comparison into an assignment
1625604152.38:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.38:                       ^~
1625604152.38:                       =
1625604152.38: insn-attrtab.c:1626:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.38:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.38:                 ~~~~~~~~~~~^~~~~~~~~~~
1625604152.38: insn-attrtab.c:1626:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.38:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.38:                ~           ^          ~
1625604152.38: insn-attrtab.c:1626:28: note: use '=' to turn this equality comparison into an assignment
1625604152.38:       else if (((ix86_cpu) == (CPU_K6)))
1625604152.38:                            ^~
1625604152.38:                            =
1625604152.38: insn-attrtab.c:1888:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.38:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.38:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.38: insn-attrtab.c:1888:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.38:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.38:           ~           ^                  ~
1625604152.38: insn-attrtab.c:1888:23: note: use '=' to turn this equality comparison into an assignment
1625604152.38:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.38:                       ^~
1625604152.38:                       =
1625604152.40: insn-attrtab.c:2219:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.40:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.40:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.40: insn-attrtab.c:2219:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.40:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.40:           ~           ^              ~
1625604152.40: insn-attrtab.c:2219:23: note: use '=' to turn this equality comparison into an assignment
1625604152.40:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.40:                       ^~
1625604152.40:                       =
1625604152.40: insn-attrtab.c:2438:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.40:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.40:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.40: insn-attrtab.c:2438:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.40:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.40:           ~           ^              ~
1625604152.40: insn-attrtab.c:2438:23: note: use '=' to turn this equality comparison into an assignment
1625604152.40:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.40:                       ^~
1625604152.40:                       =
1625604152.41: insn-attrtab.c:2657:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.41: insn-attrtab.c:2657:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:           ~           ^              ~
1625604152.41: insn-attrtab.c:2657:23: note: use '=' to turn this equality comparison into an assignment
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:                       ^~
1625604152.41:                       =
1625604152.41: insn-attrtab.c:2764:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.41: insn-attrtab.c:2764:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:           ~           ^              ~
1625604152.41: insn-attrtab.c:2764:23: note: use '=' to turn this equality comparison into an assignment
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:                       ^~
1625604152.41:                       =
1625604152.41: insn-attrtab.c:2897:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.41: insn-attrtab.c:2897:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:           ~           ^              ~
1625604152.41: insn-attrtab.c:2897:23: note: use '=' to turn this equality comparison into an assignment
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:                       ^~
1625604152.41:                       =
1625604152.41: insn-attrtab.c:3397:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.41: insn-attrtab.c:3397:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:           ~           ^              ~
1625604152.41: insn-attrtab.c:3397:23: note: use '=' to turn this equality comparison into an assignment
1625604152.41:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.41:                       ^~
1625604152.41:                       =
1625604152.42: insn-attrtab.c:3878:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.42:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.42:            ~~~~~~~~~~~^~~~~~~~~~~~~~~
1625604152.42: insn-attrtab.c:3878:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.42:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.42:           ~           ^              ~
1625604152.42: insn-attrtab.c:3878:23: note: use '=' to turn this equality comparison into an assignment
1625604152.42:       if (((ix86_cpu) == (CPU_ATHLON)))
1625604152.42:                       ^~
1625604152.42:                       =
1625604152.42: insn-attrtab.c:4124:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.42:       if (((ix86_cpu) == (CPU_K6)))
1625604152.42:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.42: insn-attrtab.c:4124:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.42:       if (((ix86_cpu) == (CPU_K6)))
1625604152.42:           ~           ^          ~
1625604152.42: insn-attrtab.c:4124:23: note: use '=' to turn this equality comparison into an assignment
1625604152.42:       if (((ix86_cpu) == (CPU_K6)))
1625604152.42:                       ^~
1625604152.42:                       =
1625604152.42: insn-attrtab.c:4301:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.42:       if (((ix86_cpu) == (CPU_K6)))
1625604152.42:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.42: insn-attrtab.c:4301:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.42:       if (((ix86_cpu) == (CPU_K6)))
1625604152.42:           ~           ^          ~
1625604152.42: insn-attrtab.c:4301:23: note: use '=' to turn this equality comparison into an assignment
1625604152.42:       if (((ix86_cpu) == (CPU_K6)))
1625604152.42:                       ^~
1625604152.42:                       =
1625604152.42: insn-attrtab.c:4363:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.42:       if (((ix86_cpu) == (CPU_K6)))
1625604152.43:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.43: insn-attrtab.c:4363:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.43:       if (((ix86_cpu) == (CPU_K6)))
1625604152.43:           ~           ^          ~
1625604152.43: insn-attrtab.c:4363:23: note: use '=' to turn this equality comparison into an assignment
1625604152.43:       if (((ix86_cpu) == (CPU_K6)))
1625604152.43:                       ^~
1625604152.43:                       =
1625604152.43: insn-attrtab.c:4809:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.43:       if (((ix86_cpu) == (CPU_K6)))
1625604152.43:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.43: insn-attrtab.c:4809:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.43:       if (((ix86_cpu) == (CPU_K6)))
1625604152.43:           ~           ^          ~
1625604152.43: insn-attrtab.c:4809:23: note: use '=' to turn this equality comparison into an assignment
1625604152.43:       if (((ix86_cpu) == (CPU_K6)))
1625604152.43:                       ^~
1625604152.43:                       =
1625604152.44: insn-attrtab.c:5425:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.44:       if (((ix86_cpu) == (CPU_K6)))
1625604152.44:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.44: insn-attrtab.c:5425:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.44:       if (((ix86_cpu) == (CPU_K6)))
1625604152.44:           ~           ^          ~
1625604152.44: insn-attrtab.c:5425:23: note: use '=' to turn this equality comparison into an assignment
1625604152.44:       if (((ix86_cpu) == (CPU_K6)))
1625604152.44:                       ^~
1625604152.44:                       =
1625604152.45: insn-attrtab.c:5859:23: 3 warnings generated.
1625604152.45: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.45:       if (((ix86_cpu) == (CPU_K6)))
1625604152.45:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.45: insn-attrtab.c:5859:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.45:       if (((ix86_cpu) == (CPU_K6)))
1625604152.45:           ~           ^          ~
1625604152.45: insn-attrtab.c:5859:23: note: use '=' to turn this equality comparison into an assignment
1625604152.45:       if (((ix86_cpu) == (CPU_K6)))
1625604152.45:                       ^~
1625604152.45:                       =
1625604152.45: insn-attrtab.c:5885:/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o insn-opinit.o -DSPEC_CPU -DNDEBUG -I.   -O2                insn-opinit.c
1625604152.45: 23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.45:       if (((ix86_cpu) == (CPU_K6)))
1625604152.45:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.45: insn-attrtab.c:5885:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.45:       if (((ix86_cpu) == (CPU_K6)))
1625604152.45:           ~           ^          ~
1625604152.45: insn-attrtab.c:5885:23: note: use '=' to turn this equality comparison into an assignment
1625604152.45:       if (((ix86_cpu) == (CPU_K6)))
1625604152.45:                       ^~
1625604152.45:                       =
1625604152.45: insn-attrtab.c:6099:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.45:       if (((ix86_cpu) == (CPU_K6)))
1625604152.45:            ~~~~~~~~~~~^~~~~~~~~~~
1625604152.45: insn-attrtab.c:6099:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.46:       if (((ix86_cpu) == (CPU_K6)))
1625604152.46:           ~           ^          ~
1625604152.46: insn-attrtab.c:6099:23: note: use '=' to turn this equality comparison into an assignment
1625604152.46:       if (((ix86_cpu) == (CPU_K6)))
1625604152.46:                       ^~
1625604152.46:                       =
1625604152.46: insn-attrtab.c:6369:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.46:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.46:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.46: insn-attrtab.c:6369:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.46:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.46:           ~           ^                  ~
1625604152.46: insn-attrtab.c:6369:23: note: use '=' to turn this equality comparison into an assignment
1625604152.46:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.46:                       ^~
1625604152.46:                       =
1625604152.47: insn-attrtab.c:6639:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.47: insn-attrtab.c:6639:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:           ~           ^                  ~
1625604152.47: insn-attrtab.c:6639:23: note: use '=' to turn this equality comparison into an assignment
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:                       ^~
1625604152.47:                       =
1625604152.47: insn-attrtab.c:6665:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.47: insn-attrtab.c:6665:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:           ~           ^                  ~
1625604152.47: insn-attrtab.c:6665:23: note: use '=' to turn this equality comparison into an assignment
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:                       ^~
1625604152.47:                       =
1625604152.47: insn-attrtab.c:6756:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.47: insn-attrtab.c:6756:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:           ~           ^                  ~
1625604152.47: insn-attrtab.c:6756:23: note: use '=' to turn this equality comparison into an assignment
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:                       ^~
1625604152.47:                       =
1625604152.47: insn-attrtab.c:6959:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.47: insn-attrtab.c:6959:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:           ~           ^                  ~
1625604152.47: insn-attrtab.c:6959:23: note: use '=' to turn this equality comparison into an assignment
1625604152.47:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.47:                       ^~
1625604152.47:                       =
1625604152.48: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o insn-output.o -DSPEC_CPU -DNDEBUG -I.   -O2                insn-output.c
1625604152.48: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o insn-peep.o -DSPEC_CPU -DNDEBUG -I.   -O2                insn-peep.c
1625604152.48: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.48: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.48: insn-attrtab.c:7567:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.48:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.48:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.48: insn-attrtab.c:7567:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.48:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.48:           ~           ^               ~
1625604152.48: insn-attrtab.c:7567:23: note: use '=' to turn this equality comparison into an assignment
1625604152.48:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.48:                       ^~
1625604152.48:                       =
1625604152.49: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.49: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.50: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.50: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.52: insn-attrtab.c:8349:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.52:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.52:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.52: insn-attrtab.c:8349:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.52:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.52:           ~           ^                  ~
1625604152.52: insn-attrtab.c:8349:23: note: use '=' to turn this equality comparison into an assignment
1625604152.52:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.52:                       ^~
1625604152.52:                       =
1625604152.52: insn-attrtab.c:8392:20: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.52:           if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.52:                ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.52: insn-attrtab.c:8392:20: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.52:           if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.52:               ~           ^               ~
1625604152.52: insn-attrtab.c:8392:20: note: use '=' to turn this equality comparison into an assignment
1625604152.52:           if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.52:                           ^~
1625604152.52:                           =
1625604152.52: insn-attrtab.c:8635:25: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.52:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.52:                     ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.52: insn-attrtab.c:8635:25: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.52:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.52:                    ~           ^               ~
1625604152.53: insn-attrtab.c:8635:25: note: use '=' to turn this equality comparison into an assignment
1625604152.53:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                                ^~
1625604152.53:                                =
1625604152.53: insn-attrtab.c:8657:25: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.53:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                     ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.53: insn-attrtab.c:8657:25: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.53:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                    ~           ^               ~
1625604152.53: insn-attrtab.c:8657:25: note: use '=' to turn this equality comparison into an assignment
1625604152.53:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                                ^~
1625604152.53:                                =
1625604152.53: insn-attrtab.c:8703:25: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.53:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                     ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.53: insn-attrtab.c:8703:25: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.53:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                    ~           ^               ~
1625604152.53: insn-attrtab.c:8703:25: note: use '=' to turn this equality comparison into an assignment
1625604152.53:           else if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                                ^~
1625604152.53:                                =
1625604152.53: insn-attrtab.c:8734:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.53:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.53:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.53: insn-attrtab.c:8734:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.53:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.53:           ~           ^                  ~
1625604152.53: insn-attrtab.c:8734:23: note: use '=' to turn this equality comparison into an assignment
1625604152.53:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.53:                       ^~
1625604152.53:                       =
1625604152.53: insn-attrtab.c:8781:20: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.53:           if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.53: insn-attrtab.c:8781:20: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.53:           if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:               ~           ^               ~
1625604152.53: insn-attrtab.c:8781:20: note: use '=' to turn this equality comparison into an assignment
1625604152.53:           if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                           ^~
1625604152.53:                           =
1625604152.53: insn-attrtab.c:8942:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.53:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.53: insn-attrtab.c:8942:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.53:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:           ~           ^               ~
1625604152.53: insn-attrtab.c:8942:23: note: use '=' to turn this equality comparison into an assignment
1625604152.53:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.53:                       ^~
1625604152.53:                       =
1625604152.54: insn-attrtab.c:9223:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9223:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9223:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9269:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9269:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9269:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9293:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9293:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9293:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9339:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9339:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9339:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9356:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9356:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9356:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9380:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9380:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9380:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9398:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9398:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9398:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9420:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9420:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9420:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9438:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9438:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9438:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.54: insn-attrtab.c:9458:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.54: insn-attrtab.c:9458:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:           ~           ^               ~
1625604152.54: insn-attrtab.c:9458:23: note: use '=' to turn this equality comparison into an assignment
1625604152.54:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.54:                       ^~
1625604152.54:                       =
1625604152.55: insn-attrtab.c:9581:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9581:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9581:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9603:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9603:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9603:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9633:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9633:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9633:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9669:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9669:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9669:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9759:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9759:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9759:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9785:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9785:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9785:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9801:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9801:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9801:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9823:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9823:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9823:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9850:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9850:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9850:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9872:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9872:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9872:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9899:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9899:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9899:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9924:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9924:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9924:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:9947:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:9947:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:9947:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10034:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10034:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10034:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10062:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10062:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10062:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10089:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10089:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10089:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10111:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10111:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10111:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10132:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10132:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10132:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10150:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10150:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10150:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10184:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10184:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10184:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10209:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10209:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10209:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10232:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10232:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10232:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:                       ^~
1625604152.55:                       =
1625604152.55: insn-attrtab.c:10343:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.55: insn-attrtab.c:10343:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.55:           ~           ^               ~
1625604152.55: insn-attrtab.c:10343:23: note: use '=' to turn this equality comparison into an assignment
1625604152.55:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10384:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10384:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10384:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10466:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10466:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10466:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10480:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10480:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10480:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10506:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10506:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10506:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10530:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10530:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10530:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10554:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10554:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10554:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10572:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10572:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10572:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10594:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10594:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10594:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10612:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10612:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10612:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10632:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10632:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10632:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10654:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10654:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10654:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.56: insn-attrtab.c:10671:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.56: insn-attrtab.c:10671:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:           ~           ^               ~
1625604152.56: insn-attrtab.c:10671:23: note: use '=' to turn this equality comparison into an assignment
1625604152.56:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.56:                       ^~
1625604152.56:                       =
1625604152.58: insn-attrtab.c:10842:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:10842:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:10842:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:10878:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:10878:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:10878:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:10899:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:10899:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:10899:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:10936:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:10936:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:10936:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:10959:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:10959:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:10959:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:11126:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:11126:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:11126:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:11186:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:11186:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:11186:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:11200:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:11200:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:11200:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:11225:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:11225:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:11225:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:11268:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:11268:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:11268:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:11353:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:11353:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:11353:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.58: insn-attrtab.c:11487:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.58: insn-attrtab.c:11487:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:           ~           ^               ~
1625604152.58: insn-attrtab.c:11487:23: note: use '=' to turn this equality comparison into an assignment
1625604152.58:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.58:                       ^~
1625604152.58:                       =
1625604152.62: 1 warning generated.
1625604152.62: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o insn-recog.o -DSPEC_CPU -DNDEBUG -I.   -O2                insn-recog.c
1625604152.63: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o integrate.o -DSPEC_CPU -DNDEBUG -I.   -O2                integrate.c
1625604152.63: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.63: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.65: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.65: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.67: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o intl.o -DSPEC_CPU -DNDEBUG -I.   -O2                intl.c
1625604152.69: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.69: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.71: insn-attrtab.c:31542:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.71:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.71:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.71: insn-attrtab.c:31542:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.71:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.71:           ~           ^                  ~
1625604152.71: insn-attrtab.c:31542:23: note: use '=' to turn this equality comparison into an assignment
1625604152.71:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.71:                       ^~
1625604152.71:                       =
1625604152.71: insn-attrtab.c:31585:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.71:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.71:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.71: insn-attrtab.c:31585:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.71:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.71:           ~           ^               ~
1625604152.71: insn-attrtab.c:31585:23: note: use '=' to turn this equality comparison into an assignment
1625604152.71:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.71:                       ^~
1625604152.71:                       =
1625604152.72: insn-attrtab.c:31958:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.72:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.72:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.72: insn-attrtab.c:31958:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.72:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.72:           ~           ^               ~
1625604152.72: insn-attrtab.c:31958:23: note: use '=' to turn this equality comparison into an assignment
1625604152.72:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.72:                       ^~
1625604152.72:                       =
1625604152.72: insn-attrtab.c:31982:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.72:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.72:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.72: insn-attrtab.c:31982:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.72:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.72:                ~           ^                  ~
1625604152.72: insn-attrtab.c:31982:28: note: use '=' to turn this equality comparison into an assignment
1625604152.72:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.72:                            ^~
1625604152.72:                            =
1625604152.72: insn-attrtab.c:32062:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.72:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.72:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.72: insn-attrtab.c:32062:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.72:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.72:                ~           ^                  ~
1625604152.72: insn-attrtab.c:32062:28: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                            ^~
1625604152.73:                            =
1625604152.73: insn-attrtab.c:32127:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32127:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:           ~           ^               ~
1625604152.73: insn-attrtab.c:32127:23: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:                       ^~
1625604152.73:                       =
1625604152.73: insn-attrtab.c:32202:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32202:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:           ~           ^               ~
1625604152.73: insn-attrtab.c:32202:23: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:                       ^~
1625604152.73:                       =
1625604152.73: insn-attrtab.c:32280:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32280:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:           ~           ^                  ~
1625604152.73: insn-attrtab.c:32280:23: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                       ^~
1625604152.73:                       =
1625604152.73: insn-attrtab.c:32323:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32323:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:           ~           ^               ~
1625604152.73: insn-attrtab.c:32323:23: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:                       ^~
1625604152.73:                       =
1625604152.73: insn-attrtab.c:32696:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32696:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:           ~           ^               ~
1625604152.73: insn-attrtab.c:32696:23: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:                       ^~
1625604152.73:                       =
1625604152.73: insn-attrtab.c:32720:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32720:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                ~           ^                  ~
1625604152.73: insn-attrtab.c:32720:28: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                            ^~
1625604152.73:                            =
1625604152.73: insn-attrtab.c:32800:28: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32800:28: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                ~           ^                  ~
1625604152.73: insn-attrtab.c:32800:28: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       else if (((ix86_cpu) == (CPU_PENTIUMPRO)))
1625604152.73:                            ^~
1625604152.73:                            =
1625604152.73: insn-attrtab.c:32865:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32865:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:           ~           ^               ~
1625604152.73: insn-attrtab.c:32865:23: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:                       ^~
1625604152.73:                       =
1625604152.73: insn-attrtab.c:32940:23: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:            ~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.73: insn-attrtab.c:32940:23: note: remove extraneous parentheses around the comparison to silence this warning
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:           ~           ^               ~
1625604152.73: insn-attrtab.c:32940:23: note: use '=' to turn this equality comparison into an assignment
1625604152.73:       if (((ix86_cpu) == (CPU_PENTIUM)))
1625604152.73:                       ^~
1625604152.73:                       =
1625604152.77: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o jump.o -DSPEC_CPU -DNDEBUG -I.   -O2                jump.c
1625604152.78: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.78: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.88: jump.c:434:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604152.88:                     = copy_insn_1 (gen_rtx_EXPR_LIST (REG_NOTE_KIND (link),
1625604152.88:                                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604152.88: ./rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
1625604152.88: #define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
1625604152.88:                              ^
1625604152.88: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604152.88:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604152.88:   ~~~~~~~~~~~~~~              ^~~~
1625604152.88: jump.c:439:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604152.88:                     = copy_insn_1 (gen_rtx_INSN_LIST (REG_NOTE_KIND (link),
1625604152.88:                                    ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604152.88: ./rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
1625604152.88: #define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
1625604152.88:                              ^
1625604152.88: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604152.88:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604152.88:   ~~~~~~~~~~~~~~              ^~~~
1625604152.89: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o langhooks.o -DSPEC_CPU -DNDEBUG -I.   -O2                langhooks.c
1625604152.89: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o lcm.o -DSPEC_CPU -DNDEBUG -I.   -O2                lcm.c
1625604152.90: jump.c:1472:43: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604152.90:                   REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, label,
1625604152.90:                                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
1625604152.90: ./genrtl.h:124:31: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.90: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604152.90: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.90:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604152.90:   ~~~~~~~~~~~~~~              ^~~~
1625604152.91: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604152.91: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604152.91: jump.c:1626:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604152.91:                     = gen_rtx_EXPR_LIST (REG_UNUSED, reg,
1625604152.91:                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604152.91: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604152.91:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604152.91:   ~~~~~~~~~~~~~~              ^~~~
1625604153.10: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o lists.o -DSPEC_CPU -DNDEBUG -I.   -O2                lists.c
1625604153.11: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o local-alloc.o -DSPEC_CPU -DNDEBUG -I.   -O2                local-alloc.c
1625604153.13: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.13: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.15: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.15: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.17: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o loop.o -DSPEC_CPU -DNDEBUG -I.   -O2                loop.c
1625604153.17: 4 warnings generated.
1625604153.17: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o obstack.o -DSPEC_CPU -DNDEBUG -I.   -O2                obstack.c
1625604153.18: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.19: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.20: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.20: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.23: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o optabs.o -DSPEC_CPU -DNDEBUG -I.   -O2                optabs.c
1625604153.25: local-alloc.c:908:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.25:                   = gen_rtx_EXPR_LIST (REG_EQUIV, dest, REG_NOTES (init_insn));
1625604153.25:                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.25: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.25:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.25:   ~~~~~~~~~~~~~~              ^~~~
1625604153.26: local-alloc.c:987:51: warning/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o params.o -DSPEC_CPU -DNDEBUG -I.   -O2                params.c
1625604153.26: : implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.26:             REG_NOTES (insn) = note = gen_rtx_EXPR_LIST (REG_EQUIV, SET_SRC (set),
1625604153.26:                                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.26: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.26:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.26:   ~~~~~~~~~~~~~~              ^~~~
1625604153.26: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.26: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.28: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o predict.o -DSPEC_CPU -DNDEBUG -I.   -O2                predict.c
1625604153.29: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.29: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.29: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.29: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.30: loop.c:1748:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.30:             REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL, XEXP (x, 0),
1625604153.30:                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
1625604153.30: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604153.30:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604153.30:   ~~~~~~~~~~~~~~              ^~~~
1625604153.36: predict.c:104:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.36:     = gen_rtx_EXPR_LIST (REG_BR_PRED,
1625604153.36:       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
1625604153.37: ./genrtl.h:122:31: note/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o print-rtl.o -DSPEC_CPU -DNDEBUG -I.   -O2                print-rtl.c
1625604153.37: : loop.c:7976:29: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.38:               = gen_rtx_EXPR_LIST (REG_NONNEG, bl->biv->dest_reg,
1625604153.38:                 ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.38: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.38:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.38:   ~~~~~~~~~~~~~~              ^~~~
1625604153.38: loop.c:8002:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.38:                   = gen_rtx_EXPR_LIST (REG_NONNEG, bl->biv->dest_reg,
1625604153.38:                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.38: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.38:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.38:   ~~~~~~~~~~~~~~              ^~~~
1625604153.38: loop.c:8399:46: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.38:                       REG_NOTES (tem) = gen_rtx_EXPR_LIST (REG_NONNEG, reg,
1625604153.38:                                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
1625604153.38: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.38:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.38:   ~~~~~~~~~~~~~~              ^~~~
1625604153.38: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.38:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.38:   ~~~~~~~~~~~~~~              ^~~~
1625604153.38: predict.c:301:23: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.38:         = gen_rtx_EXPR_LIST (REG_BR_PROB,
1625604153.38:           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
1625604153.38: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.38:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.38:   ~~~~~~~~~~~~~~              ^~~~
1625604153.39: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.39: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.39: predict.c:905:8: warning: logical not is only applied to the left hand side of this bitwise operator [-Wlogical-not-parentheses]
1625604153.40:           if (!fallthru->flags & EDGE_FALLTHRU)
1625604153.40:               ^                ~
1625604153.40: predict.c:905:8: note: add parentheses after the '!' to evaluate the bitwise operator first
1625604153.40:           if (!fallthru->flags & EDGE_FALLTHRU)
1625604153.40:               ^
1625604153.40:                (                              )
1625604153.40: predict.c:905:8: note: add parentheses around left hand side expression to silence this warning
1625604153.40:           if (!fallthru->flags & EDGE_FALLTHRU)
1625604153.40:               ^
1625604153.40:               (               )
1625604153.48: optabs.c:2797:40: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.48:         REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_NO_CONFLICT, op1,
1625604153.48:                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604153.48: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.48:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.48:   ~~~~~~~~~~~~~~              ^~~~
1625604153.48: optabs.c:2801:40: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.48:         REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_NO_CONFLICT, op0,
1625604153.48:                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604153.49: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.49:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.49:   ~~~~~~~~~~~~~~              ^~~~
1625604153.49: optabs.c:2830:42: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.49:   REG_NOTES (first) = gen_rtx_INSN_LIST (REG_LIBCALL, last,/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o print-tree.o -DSPEC_CPU -DNDEBUG -I.   -O2                print-tree.c

1625604153.50:                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
1625604153.50: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604153.50:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604153.50:   ~~~~~~~~~~~~~~              ^~~~
1625604153.50: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.50: optabs.cclang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.50: :2832:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.50:   REG_NOTES (last) = gen_rtx_INSN_LIST (REG_RETVAL, first, REG_NOTES (last));
1625604153.50:                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.50: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604153.50:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604153.51:   ~~~~~~~~~~~~~~              ^~~~
1625604153.51: optabs.c:2903:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.51:             REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_EH_REGION, GEN_INT (-1),
1625604153.51:                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.51: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.51:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.51:   ~~~~~~~~~~~~~~              ^~~~
1625604153.51: optabs.c:2984:46: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.51:       REG_NOTES (first) = gen_rtx_INSN_LIST (REG_LIBCALL, last,
1625604153.51:                           ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
1625604153.51: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604153.51:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604153.51:   ~~~~~~~~~~~~~~              ^~~~
1625604153.51: optabs.c:2986:45: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.52:       REG_NOTES (last) = gen_rtx_INSN_LIST (REG_RETVAL, first,
1625604153.52:                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
1625604153.52: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604153.52:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604153.52:   ~~~~~~~~~~~~~~              ^~~~
1625604153.57: 3 warnings generated.
1625604153.57: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o profile.o -DSPEC_CPU -DNDEBUG -I.   -O2                profile.c
1625604153.59: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o real.o -DSPEC_CPU -DNDEBUG -I.   -O2                real.c
1625604153.60: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.60: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.61: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.61: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.70: 2 warnings generated.
1625604153.71: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o recog.o -DSPEC_CPU -DNDEBUG -I.   -O2                recog.c
1625604153.72: profile.c:462:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.72:                   = gen_rtx_EXPR_LIST (REG_BR_PROB, GEN_INT (prob),
1625604153.72:                     ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.72: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.72: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.72: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.72:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.72:   ~~~~~~~~~~~~~~              ^~~~
1625604153.72: profile.c:494:22: warning: expression result unused [-Wunused-value]
1625604153.72:             num_branches++, num_never_executed;
1625604153.72:                             ^~~~~~~~~~~~~~~~~~
1625604153.76: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o reg-stack.o -DSPEC_CPU -DNDEBUG -I.   -O2                reg-stack.c
1625604153.79: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604153.79: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604153.90: recog.c:3144:reg-stack.c:957:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.90:     = gen_rtx_EXPR_LIST (REG_DEAD, FP_MODE_REG (FIRST_STACK_REG, DFmode),
1625604153.90:       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604153.90: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.90:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.90:   ~~~~~~~~~~~~~~              ^~~~
1625604153.90: 31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.90:                               = gen_rtx_EXPR_LIST (REG_NOTE_KIND (note),
1625604153.90:                                 ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
1625604153.90: ./rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
1625604153.90: #define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
1625604153.90:                              ^
1625604153.90: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.90:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.90:   ~~~~~~~~~~~~~~              ^~~~
1625604153.90: recog.c:3194:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.90:                               = gen_rtx_EXPR_LIST (REG_EH_REGION,
1625604153.90:                                 ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
1625604153.90: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.90:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.90:   ~~~~~~~~~~~~~~              ^~~~
1625604153.91: reg-stack.c:1175:42: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604153.91:           REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_DEAD, top_stack_reg,
1625604153.92:                              ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
1625604153.92: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604153.92:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604153.92:   ~~~~~~~~~~~~~~              ^~~~
1625604154.08: 2 warnings generated.
1625604154.09: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o regclass.o -DSPEC_CPU -DNDEBUG -I.   -O2                regclass.c
1625604154.09: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.10: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.24: 7 warnings generated.
1625604154.25: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o regmove.o -DSPEC_CPU -DNDEBUG -I.   -O2                regmove.c
1625604154.26: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.26: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.33: 2 warnings generated.
1625604154.33: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o regrename.o -DSPEC_CPU -DNDEBUG -I.   -O2                regrename.c
1625604154.35: regmove.c:148:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604154.35:                     = gen_rtx_EXPR_LIST (REG_INC,
1625604154.35:                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~
1625604154.35: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604154.36: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.36: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.36:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604154.36:   ~~~~~~~~~~~~~~              ^~~~
1625604154.45: regrename.c:136:30: warning: comparison of different enumeration types ('enum reg_note' and 'enum machine_mode') [-Wenum-compare]
1625604154.45:     if (REG_NOTE_KIND (note) == kind && REG_P (XEXP (note, 0)))
1625604154.46:         ~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
1625604154.48: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o reload.o -DSPEC_CPU -DNDEBUG -I.   -O2                reload.c
1625604154.48: 2 warnings generated.
1625604154.49: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o reload1.o -DSPEC_CPU -DNDEBUG -I.   -O2                reload1.c
1625604154.49: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.49: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.49: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.49: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.55: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o reorg.o -DSPEC_CPU -DNDEBUG -I.   -O2                reorg.c
1625604154.56: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.56: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.61: reload1.c:2501:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604154.61:               x = gen_rtx_EXPR_LIST (REG_NOTE_KIND (x), new, XEXP (x, 1));
1625604154.61:                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.61: ./rtl.h:601:30: note: expanded from macro 'REG_NOTE_KIND'
1625604154.61: #define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
1625604154.61:                              ^
1625604154.61: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604154.62:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604154.62:   ~~~~~~~~~~~~~~              ^~~~
1625604154.62: reload.c:3928:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604154.62:             REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL,
1625604154.62:                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
1625604154.62: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604154.62:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604154.62:   ~~~~~~~~~~~~~~              ^~~~
1625604154.63: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o resource.o -DSPEC_CPU -DNDEBUG -I.   -O2                resource.c
1625604154.64: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.64: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.66: reload.c:5880:44: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604154.66:             REG_NOTES (insn) = gen_rtx_INSN_LIST (REG_LABEL,
1625604154.66:                                ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
1625604154.66: ./genrtl.h:124:31: note: expanded from macro 'gen_rtx_INSN_LIST'
1625604154.66:   gen_rtx_fmt_ue (INSN_LIST, (MODE), (ARG0), (ARG1))
1625604154.66:   ~~~~~~~~~~~~~~              ^~~~
1625604154.67: reload1.c:7507:24: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604154.67:                 = gen_rtx_EXPR_LIST (REG_EQUIV, in, REG_NOTES (insn));
1625604154.67:                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.67: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604154.67:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604154.67:   ~~~~~~~~~~~~~~              ^~~~
1625604154.68: reload1.c:7516:45: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604154.68:       REG_NOTES (insn) = gen_rtx_EXPR_LIST (REG_EQUIV, in, REG_NOTES (insn));
1625604154.68:                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.68: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604154.68:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604154.68:   ~~~~~~~~~~~~~~              ^~~~
1625604154.71: reload1.c:9480:29: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604154.71:               = gen_rtx_EXPR_LIST (REG_EH_REGION, XEXP (eh_note, 0),
1625604154.71:                 ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.71: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604154.71:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604154.71:   ~~~~~~~~~~~~~~              ^~~~
1625604154.82: 128 warnings generated.
1625604154.82: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o rtl.o -DSPEC_CPU -DNDEBUG -I.   -O2                rtl.c
1625604154.83: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.83: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.86: 1 warning generated.
1625604154.86: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o rtlanal.o -DSPEC_CPU -DNDEBUG -I.   -O2                rtlanal.c
1625604154.87: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.87: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.89: In file included from rtl.c:188:
1625604154.89: ./machmode.def:80:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.89: DEF_MACHMODE (DImode, "DI", MODE_INT, BITS_PER_UNIT*8, 8, 8, TImode, VOIDmode)
1625604154.89: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.89: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.89:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.89:                                                                                                     ^  ~~~~~~~~~
1625604154.89: In file included from rtl.c:188:
1625604154.89: ./machmode.def:81:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.89: DEF_MACHMODE (TImode, "TI", MODE_INT, BITS_PER_UNIT*16, 16, 16, OImode, VOIDmode)
1625604154.89: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.90: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.90:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.90:                                                                                                     ^  ~~~~~~~~~
1625604154.90: In file included from rtl.c:188:
1625604154.90: ./machmode.def:82:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.90: DEF_MACHMODE (OImode, "OI", MODE_INT, BITS_PER_UNIT*32, 32, 32, VOIDmode, VOIDmode)
1625604154.90: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.90: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.90:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.90:                                                                                                     ^  ~~~~~~~~~
1625604154.90: In file included from rtl.c:188:
1625604154.90: ./machmode.def:90:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.90: DEF_MACHMODE (PDImode, "PDI", MODE_PARTIAL_INT, BITS_PER_UNIT*8, 8, 8, VOIDmode, VOIDmode)
1625604154.90: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:96:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (DFmode, "DF", MODE_FLOAT, BITS_PER_UNIT*8, 8, 8, XFmode, VOIDmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:97:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (XFmode, "XF", MODE_FLOAT, BITS_PER_UNIT*12, 12, 12, TFmode, VOIDmode) /* IEEE extended */
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:98:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (TFmode, "TF", MODE_FLOAT, BITS_PER_UNIT*16, 16, 16, VOIDmode, VOIDmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:103:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (SCmode, "SC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*8, 8, 4, DCmode, SFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:104:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (DCmode, "DC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*16, 16, 8, XCmode, DFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:105:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (XCmode, "XC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*24, 24, 12, TCmode, XFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:106:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (TCmode, "TC", MODE_COMPLEX_FLOAT, BITS_PER_UNIT*32, 32, 16, VOIDmode, TFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:110:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (CSImode, "CSI", MODE_COMPLEX_INT, BITS_PER_UNIT*8, 8, 4, CDImode, SImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:111:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (CDImode, "CDI", MODE_COMPLEX_INT, BITS_PER_UNIT*16, 16, 8, CTImode, DImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:112:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (CTImode, "CTI", MODE_COMPLEX_INT, BITS_PER_UNIT*32, 32, 16, COImode, TImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:113:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (COImode, "COI", MODE_COMPLEX_INT, BITS_PER_UNIT*64, 64, 32, VOIDmode, OImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:123:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V2SImode, "V2SI", MODE_VECTOR_INT, BITS_PER_UNIT*8, 8, 4, V16QImode, SImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:124:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V2DImode, "V2DI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 8, V8SImode, DImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:127:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V4HImode, "V4HI", MODE_VECTOR_INT, BITS_PER_UNIT*8, 8, 2, V2SImode, HImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:128:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V4SImode, "V4SI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 4, V2DImode, SImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:129:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V4DImode, "V4DI", MODE_VECTOR_INT, BITS_PER_UNIT*32, 32, 8, V8DImode, DImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:131:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V8QImode, "V8QI", MODE_VECTOR_INT, BITS_PER_UNIT*8, 8, 1, V4HImode, QImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:132:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V8HImode, "V8HI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 2, V4SImode, HImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:133:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V8SImode, "V8SI", MODE_VECTOR_INT, BITS_PER_UNIT*32, 32, 4, V4DImode, SImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:134:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V8DImode, "V8DI", MODE_VECTOR_INT, BITS_PER_UNIT*64, 64, 8, VOIDmode, DImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:136:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V16QImode, "V16QI", MODE_VECTOR_INT, BITS_PER_UNIT*16, 16, 1, V8HImode, QImode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:138:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V2SFmode, "V2SF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*8, 8, 4, V4SFmode, SFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:139:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V2DFmode, "V2DF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*16, 16, 8, V8SFmode, DFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:141:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V4SFmode, "V4SF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*16, 16, 4, V2DFmode, SFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:142:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V4DFmode, "V4DF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*32, 32, 8, V8DFmode, DFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:144:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V8SFmode, "V8SF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*32, 32, 4,V4DFmode, SFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:145:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V8DFmode, "V8DF", MODE_VECTOR_FLOAT, BITS_PER_UNIT*64, 64, 8, VOIDmode, DFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.91: In file included from rtl.c:188:
1625604154.91: ./machmode.def:146:1: warning: shift count >= width of type [-Wshift-count-overflow]
1625604154.91: DEF_MACHMODE (V16SFmode, "V16SF", MODE_VECTOR_FLOAT, 512, 64, 4, VOIDmode, SFmode)
1625604154.91: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1625604154.91: rtl.c:183:101: note: expanded from macro 'DEF_MACHMODE'
1625604154.91:   ((BITSIZE) >= HOST_BITS_PER_WIDE_INT) ? ~(unsigned HOST_WIDE_INT) 0 : ((unsigned HOST_WIDE_INT) 1 << (BITSIZE)) - 1,
1625604154.91:                                                                                                     ^  ~~~~~~~~~
1625604154.93: 1 warning generated.
1625604154.94: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o rtl-error.o -DSPEC_CPU -DNDEBUG -I.   -O2                rtl-error.c
1625604154.94: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o sbitmap.o -DSPEC_CPU -DNDEBUG -I.   -O2                sbitmap.c
1625604154.95: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.95: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.96: 32 warnings generated.
1625604154.96: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o sched-deps.o -DSPEC_CPU -DNDEBUG -I.   -O2                sched-deps.c
1625604154.96: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.97: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604154.97: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604154.97: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.06: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o sched-ebb.o -DSPEC_CPU -DNDEBUG -I.   -O2                sched-ebb.c
1625604155.07: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.07: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.14: 4 warnings generated.
1625604155.14: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o sched-rgn.o -DSPEC_CPU -DNDEBUG -I.   -O2                sched-rgn.c
1625604155.15: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.15: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.17: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o sched-vis.o -DSPEC_CPU -DNDEBUG -I.   -O2                sched-vis.c
1625604155.18: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.19: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.31: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o sdbout.o -DSPEC_CPU -DNDEBUG -I.   -O2                sdbout.c
1625604155.32: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.32: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.33: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o sibcall.o -DSPEC_CPU -DNDEBUG -I.   -O2                sibcall.c
1625604155.34: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.34: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.35: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o simplify-rtx.o -DSPEC_CPU -DNDEBUG -I.   -O2                simplify-rtx.c
1625604155.35: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.35: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.41: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o ssa.o -DSPEC_CPU -DNDEBUG -I.   -O2                ssa.c
1625604155.41: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.41: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.45: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o ssa-ccp.o -DSPEC_CPU -DNDEBUG -I.   -O2                ssa-ccp.c
1625604155.48: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.48: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.53: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o ssa-dce.o -DSPEC_CPU -DNDEBUG -I.   -O2                ssa-dce.c
1625604155.54: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.54: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.72: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o stmt.o -DSPEC_CPU -DNDEBUG -I.   -O2                stmt.c
1625604155.73: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.73: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.73: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o stor-layout.o -DSPEC_CPU -DNDEBUG -I.   -O2                stor-layout.c
1625604155.74: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.74: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.78: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o stringpool.o -DSPEC_CPU -DNDEBUG -I.   -O2                stringpool.c
1625604155.79: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.79: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.86: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o timevar.o -DSPEC_CPU -DNDEBUG -I.   -O2                timevar.c
1625604155.87: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.87: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.88: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o toplev.o -DSPEC_CPU -DNDEBUG -I.   -O2                toplev.c
1625604155.88: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604155.88: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604155.99: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o tree.o -DSPEC_CPU -DNDEBUG -I.   -O2                tree.c
1625604155.99: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.00: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.00: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o tree-dump.o -DSPEC_CPU -DNDEBUG -I.   -O2                tree-dump.c
1625604156.01: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.01: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.04: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o tree-inline.o -DSPEC_CPU -DNDEBUG -I.   -O2                tree-inline.c
1625604156.05: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.05: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.09: tree-dump.c:577:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case EXPR_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:558:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case COMPOUND_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:564:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case DECL_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:598:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case IF_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:583:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case FOR_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:625:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case WHILE_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:570:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case DO_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:612:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case RETURN_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:537:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case BREAK_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:538:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case CONTINUE_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:618:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case SWITCH_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:592:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case GOTO_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:606:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case LABEL_STMT:
1625604156.09:          ^
1625604156.09: tree-dump.c:526:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.09:     case ASM_STMT:
1625604156.09:          ^
1625604156.10: tree-dump.c:632:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.10:     case SCOPE_STMT:
1625604156.10:          ^
1625604156.10: tree-dump.c:543:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.10:     case CASE_LABEL:
1625604156.10:          ^
1625604156.10: tree-dump.c:696:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.10:     case STMT_EXPR:
1625604156.10:          ^
1625604156.10: tree-dump.c:551:10: warning: case value not in enumerated type 'enum tree_code' [-Wswitch]
1625604156.10:     case CLEANUP_STMT:
1625604156.10:          ^
1625604156.12: tree-inline.c:351:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.12:       goto_stmt = build_stmt (GOTO_STMT, id->ret_label);
1625604156.12:                   ~~~~~~~~~~  ^~~~~~~~~
1625604156.12(0.01s): tree-inline.c:360:22: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.13:           *tp = build_stmt (EXPR_STMT,
1625604156.13:                 ~~~~~~~~~~  ^~~~~~~~~
1625604156.13: tree-inline.c:529:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.13:       init_stmt = build_stmt (DECL_STMT, var);
1625604156.13:                   ~~~~~~~~~~  ^~~~~~~~~
1625604156.13: tree-inline.c:554:28: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.13:           init_stmt = build_stmt (EXPR_STMT,
1625604156.13:                       ~~~~~~~~~~  ^~~~~~~~~
1625604156.13: tree-inline.c:570:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.13:           cleanup_stmt = build_stmt (CLEANUP_STMT, var, cleanup);
1625604156.13:                          ~~~~~~~~~~  ^~~~~~~~~~~~
1625604156.13: tree-inline.c:587:31: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.13:       init_stmt = build_stmt (EXPR_STMT, value);
1625604156.13:                   ~~~~~~~~~~  ^~~~~~~~~
1625604156.13: tree-inline.c:634:29: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.14:     *use_stmt = build_stmt (EXPR_STMT, var);
1625604156.14:                 ~~~~~~~~~~  ^~~~~~~~~
1625604156.14: tree-inline.c:636:29: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.14:     *use_stmt = build_stmt (EXPR_STMT,
1625604156.14:                 ~~~~~~~~~~  ^~~~~~~~~
1625604156.14: tree-inline.c:645:24: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.14:     return build_stmt (DECL_STMT, var);
1625604156.14:            ~~~~~~~~~~  ^~~~~~~~~
1625604156.14: tree-inline.c:856:18: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.14:   expr = build1 (STMT_EXPR, TREE_TYPE (TREE_TYPE (fn)), NULL_TREE);
1625604156.14:          ~~~~~~  ^~~~~~~~~
1625604156.14: tree-inline.c:905:28: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.14:   scope_stmt = build_stmt (SCOPE_STMT, DECL_INITIAL (fn));
1625604156.14:                ~~~~~~~~~~  ^~~~~~~~~~
1625604156.14: tree-inline.c:930:28: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.14:   scope_stmt = build_stmt (SCOPE_STMT, DECL_INITIAL (fn));
1625604156.14:                ~~~~~~~~~~  ^~~~~~~~~~
1625604156.15: tree-inline.c:941:21: warning: implicit conversion from enumeration type 'enum c_tree_code' to different enumeration type 'enum tree_code' [-Wenum-conversion]
1625604156.15:                build_stmt (LABEL_STMT, id->ret_label));
1625604156.15:                ~~~~~~~~~~  ^~~~~~~~~~
1625604156.23: 2 warnings generated.
1625604156.23: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o unroll.o -DSPEC_CPU -DNDEBUG -I.   -O2                unroll.c
1625604156.24(0.02s): clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.26: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.27: 18 warnings generated.
1625604156.27: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o varasm.o -DSPEC_CPU -DNDEBUG -I.   -O2                varasm.c
1625604156.28: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]13 warnings generated.

1625604156.28: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.28: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o varray.o -DSPEC_CPU -DNDEBUG -I.   -O2                varray.c
1625604156.29: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.29: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.36: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o vmsdbgout.o -DSPEC_CPU -DNDEBUG -I.   -O2                vmsdbgout.c
1625604156.37: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.37: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.39: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o xcoffout.o -DSPEC_CPU -DNDEBUG -I.   -O2                xcoffout.c
1625604156.40: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.40: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.50: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o ggc-page.o -DSPEC_CPU -DNDEBUG -I.   -O2                ggc-page.c
1625604156.52: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.52: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.67: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o i386.o -DSPEC_CPU -DNDEBUG -I.   -O2                i386.c
1625604156.67: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o xmalloc.o -DSPEC_CPU -DNDEBUG -I.   -O2                xmalloc.c
1625604156.68: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.68: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.68: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.68: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.69: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o xexit.o -DSPEC_CPU -DNDEBUG -I.   -O2                xexit.c
1625604156.70: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.71: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.73: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o hashtab.o -DSPEC_CPU -DNDEBUG -I.   -O2                hashtab.c
1625604156.76: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.76: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.78: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o safe-ctype.o -DSPEC_CPU -DNDEBUG -I.   -O2                safe-ctype.c
1625604156.79: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o splay-tree.o -DSPEC_CPU -DNDEBUG -I.   -O2                splay-tree.c
1625604156.79: 4 warnings generated.
1625604156.80: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o xstrdup.o -DSPEC_CPU -DNDEBUG -I.   -O2                xstrdup.c
1625604156.80: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.80: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.81: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.82: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.82: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.82: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.82: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o md5.o -DSPEC_CPU -DNDEBUG -I.   -O2                md5.c
1625604156.83: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.83: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.84: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o fibheap.o -DSPEC_CPU -DNDEBUG -I.   -O2                fibheap.c
1625604156.84: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.85: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.86: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o xstrerror.o -DSPEC_CPU -DNDEBUG -I.   -O2                xstrerror.c
1625604156.89: clang-12/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o concat.o -DSPEC_CPU -DNDEBUG -I.   -O2                concat.c
1625604156.89: : warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.90: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.90: i386.c:7938:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604156.90:           = gen_rtx_EXPR_LIST (REG_BR_PROB,clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]

1625604156.90:             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
1625604156.90: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.90: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604156.90:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604156.90:   ~~~~~~~~~~~~~~              ^~~~
1625604156.90: i386.c:7948:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604156.90:       = gen_rtx_EXPR_LIST (REG_BR_PROB,
1625604156.90:         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
1625604156.90: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604156.90:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604156.90:   ~~~~~~~~~~~~~~              ^~~~
1625604156.90: i386.c:7959:25: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wenum-conversion]
1625604156.90:           = gen_rtx_EXPR_LIST (REG_BR_PROB,
1625604156.90:             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
1625604156.90: ./genrtl.h:122:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
1625604156.90:   gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
1625604156.90:   ~~~~~~~~~~~~~~              ^~~~
1625604156.92: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o partition.o -DSPEC_CPU -DNDEBUG -I.   -O2                partition.c
1625604156.93: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.93: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.95: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o hex.o -DSPEC_CPU -DNDEBUG -I.   -O2                hex.c
1625604156.96: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o lbasename.o -DSPEC_CPU -DNDEBUG -I.   -O2                lbasename.c
1625604156.96: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o getpwd.o -DSPEC_CPU -DNDEBUG -I.   -O2                getpwd.c
1625604156.96: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.97: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.98: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.98: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.98: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o ucbqsort.o -DSPEC_CPU -DNDEBUG -I.   -O2                ucbqsort.c
1625604156.99: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.99: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604156.99: clang-12: warning: -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]
1625604156.99: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604157.74: 3 warnings generated.
1625604157.95: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition   -O2          alloca.o asprintf.o vasprintf.o c-parse.o c-lang.o attribs.o c-errors.o c-lex.o c-pragma.o c-decl.o c-typeck.o c-convert.o c-aux-info.o c-common.o c-format.o c-semantics.o c-objc-common.o main.o cpplib.o cpplex.o cppmacro.o cppexp.o cppfiles.o cpphash.o cpperror.o cppinit.o cppdefault.o line-map.o mkdeps.o prefix.o version.o mbchar.o alias.o bb-reorder.o bitmap.o builtins.o caller-save.o calls.o cfg.o cfganal.o cfgbuild.o cfgcleanup.o cfglayout.o cfgloop.o cfgrtl.o combine.o conflict.o convert.o cse.o cselib.o dbxout.o debug.o dependence.o df.o diagnostic.o doloop.o dominance.o dwarf2asm.o dwarf2out.o dwarfout.o emit-rtl.o except.o explow.o expmed.o expr.o final.o flow.o fold-const.o function.o gcse.o genrtl.o ggc-common.o global.o graph.o haifa-sched.o hash.o hashtable.o hooks.o ifcvt.o insn-attrtab.o insn-emit.o insn-extract.o insn-opinit.o insn-output.o insn-peep.o insn-recog.o integrate.o intl.o jump.o langhooks.o lcm.o lists.o local-alloc.o loop.o obstack.o optabs.o params.o predict.o print-rtl.o print-tree.o profile.o real.o recog.o reg-stack.o regclass.o regmove.o regrename.o reload.o reload1.o reorg.o resource.o rtl.o rtlanal.o rtl-error.o sbitmap.o sched-deps.o sched-ebb.o sched-rgn.o sched-vis.o sdbout.o sibcall.o simplify-rtx.o ssa.o ssa-ccp.o ssa-dce.o stmt.o stor-layout.o stringpool.o timevar.o toplev.o tree.o tree-dump.o tree-inline.o unroll.o varasm.o varray.o vmsdbgout.o xcoffout.o ggc-page.o i386.o xmalloc.o xexit.o hashtab.o safe-ctype.o splay-tree.o xstrdup.o md5.o fibheap.o xstrerror.o concat.o partition.o hex.o lbasename.o getpwd.o ucbqsort.o             -lm        -o gcc
1625604157.96: clang-12: warning: argument unused during compilation: '-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang' [-Wunused-command-line-argument]
1625604209.60: specmake[1]: Leaving directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000'
1625604209.60: Tee child 781685 exited with code 0 (exit code=0, signal=0)
1625604209.60: Stop make command: Tue Jul  6 13:43:29 2021 (1625604209)
1625604209.60: Elapsed time for make command: 00:01:01 (61)
1625604209.60: Issuing options command 'specmake -j8 options'
1625604209.60: specmake -j8 options 2> options.err | tee options.out
1625604209.60: Start options command: Tue Jul  6 13:43:29 2021 (1625604209)
1625604209.61: specmake[1]: Entering directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000'
1625604209.61: COMP: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o options.o -DSPEC_CPU -DNDEBUG -I.   -O2                <source>
1625604209.61: C: CC="/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition"
1625604209.61: C: COBJOPT="-c -o options"
1625604209.61: P: CPUFLAGS="-DSPEC_CPU -DNDEBUG"
1625604209.61: P: BENCH_FLAGS="-I."
1625604209.61: P: BENCH_CFLAGS=""
1625604209.61: O: OPTIMIZE=""
1625604209.61: O: COPTIMIZE="-O2"
1625604209.61: P: PORTABILITY=""
1625604209.61: P: CPORTABILITY=""
1625604209.61: O: EXTRA_CFLAGS=""
1625604209.61: O: EXTRA_OPTIMIZE=""
1625604209.61: O: EXTRA_COPTIMIZE=""
1625604209.61: P: EXTRA_PORTABILITY=""
1625604209.61: P: EXTRA_CPORTABILITY=""
1625604209.61: LINK: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition   -O2          <objects>   -lm        -o options
1625604209.61: C: LD="/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition"
1625604209.61: O: COPTIMIZE="-O2"
1625604209.61: C: MATH_LIBS="-lm"
1625604209.61: C: LDOUT="-o options"
1625604209.61: specmake[1]: Leaving directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/build/build_base_SegmentZero.0000'
1625604209.74: Tee child 781916 exited with code 0 (exit code=0, signal=0)
1625604209.74: Stop options command: Tue Jul  6 13:43:29 2021 (1625604209)
1625604209.74: Elapsed time for options command: 00:00:00 (0)
1625604209.74:   Compile for '403.gcc' ended at: Tue Jul  6 13:43:29 2021 (1625604209)
1625604209.74:   Elapsed compile for '403.gcc': 00:01:01 (61)
1625604209.81: Comparing MD5 hashes:
1625604209.81:   36fc960c2ff6a1ce11bebed0e85743ee gcc
1625604209.81:   36fc960c2ff6a1ce11bebed0e85743ee /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/exe/gcc_base.SegmentZero
1625604210.10: Tee child 781938 exited with code 0 (exit code=0, signal=0)
1625604210.10: update_config_md5(Spec::Config=HASH(0x3998a30), SegmentZero, default) called
1625604210.10: Found new MD5 signature for 403.gcc=base=SegmentZero=default
1625604210.10: Updating config file /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg
1625604210.10: /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg will be saved as /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg.2021-07-06_1343

1625604210.10: ------------------------------------------------------------------------
1625604210.39: Tee child 781963 exited with code 0 (exit code=0, signal=0)
1625604210.39: MD5 mismatch for options (stored: 6bcc2c6bcc241a230c858dd890ca8657)(expected: b5c9f02f5f9ecfd911df0990499b00cb)
1625604210.40:   Building 999.specrand base SegmentZero default: (build_base_SegmentZero.0000)
1625604210.42: Comparing MD5 hashes:
1625604210.42:   d84b4ba86f793c8e9c8f2eb4dcb7b461 /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/src/Makefile
1625604210.42:   d84b4ba86f793c8e9c8f2eb4dcb7b461 /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000/Makefile
1625604210.44: Wrote to makefile '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000/Makefile.deps':

1625604210.44: # These are the build dependencies

1625604210.44: # End dependencies
1625604210.44: Wrote to makefile '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000/Makefile.spec':
1625604210.44: TUNE=base
1625604210.44: EXT=SegmentZero
1625604210.44: NUMBER=999
1625604210.44: NAME=specrand
1625604210.44: SOURCES= main.c specrand.c
1625604210.44: EXEBASE=specrand
1625604210.44: NEED_MATH=
1625604210.44: BENCHLANG=C
1625604210.44: ONESTEP=
1625604210.44: CONESTEP=

1625604210.44: CC               = /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition
1625604210.44: COPTIMIZE        = -O2
1625604210.44: CXX              = /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang++ -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -std=gnu++03
1625604210.44: CXXOPTIMIZE      = -O2
1625604210.44: FC               = /usr/local/bin/gfortran
1625604210.44: FOPTIMIZE        = -O2
1625604210.44: FPBASE           = yes
1625604210.44: OS               = unix
1625604210.44: absolutely_no_locking = 0
1625604210.44: abstol           = 
1625604210.44: action           = validate
1625604210.44: allow_extension_override = 0
1625604210.44: backup_config    = 1
1625604210.44: baseexe          = specrand
1625604210.44: basepeak         = 0
1625604210.44: benchdir         = benchspec
1625604210.44: benchmark        = 999.specrand
1625604210.44: binary           = 
1625604210.44: bindir           = exe
1625604210.44: build_in_build_dir = 1
1625604210.44: builddir         = build
1625604210.44: bundleaction     = 
1625604210.44: bundlename       = 
1625604210.44: calctol          = 0
1625604210.44: changedmd5       = 0
1625604210.44: check_integrity  = 1
1625604210.44: check_md5        = 1
1625604210.44: check_version    = 1
1625604210.44: command_add_redirect = 0
1625604210.44: commanderrfile   = speccmds.err
1625604210.44: commandexe       = specrand_base.SegmentZero
1625604210.44: commandfile      = speccmds.cmd
1625604210.44: commandoutfile   = speccmds.out
1625604210.44: commandstdoutfile = speccmds.stdout
1625604210.44: compareerrfile   = compare.err
1625604210.44: comparefile      = compare.cmd
1625604210.44: compareoutfile   = compare.out
1625604210.44: comparestdoutfile = compare.stdout
1625604210.44: compile_error    = 0
1625604210.44: compwhite        = 
1625604210.44: configdir        = config
1625604210.44: configpath       = /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg
1625604210.44: copies           = 1
1625604210.44: datadir          = data
1625604210.44: delay            = 0
1625604210.44: deletebinaries   = 0
1625604210.44: deletework       = 0
1625604210.44: difflines        = 10
1625604210.44: dirprot          = 511
1625604210.44: endian           = 12345678
1625604210.44: env_vars         = 0
1625604210.44: exitvals         = spec_exit
1625604210.44: expand_notes     = 0
1625604210.44: expid            = 
1625604210.44: ext              = SegmentZero
1625604210.44: fake             = 0
1625604210.44: feedback         = 1
1625604210.44: flag_url_base    = http://www.spec.org/auto/cpu2006/flags/
1625604210.44: floatcompare     = 1
1625604210.44: help             = 0
1625604210.44: http_proxy       = 
1625604210.44: http_timeout     = 30
1625604210.44: hw_avail         = Dec-9999
1625604210.44: hw_cpu_char      = 
1625604210.44: hw_cpu_mhz       = 3000
1625604210.44: hw_cpu_name      = AMD Opteron 256
1625604210.44: hw_disk          = SATA
1625604210.44: hw_fpu           = Integrated
1625604210.44: hw_memory        = 2 GB (2 x 1GB DDR333 CL2.5)
1625604210.44: hw_model         = Tyan Thunder KKQS Pro (S4882)
1625604210.44: hw_nchips        = 1
1625604210.44: hw_ncores        = 1
1625604210.44: hw_ncoresperchip = 1
1625604210.44: hw_ncpuorder     = 1 chip
1625604210.44: hw_nthreadspercore = 1
1625604210.44: hw_ocache        = None
1625604210.44: hw_pcache        = 64 KB I + 64 KB D on chip per chip
1625604210.44: hw_scache        = 1 MB I+D on chip per chip
1625604210.44: hw_tcache        = None
1625604210.44: hw_vendor        = Tyan
1625604210.44: ignore_errors    = yes
1625604210.44: ignore_sigint    = 0
1625604210.44: ignorecase       = 
1625604210.44: info_wrap_columns = 50
1625604210.44: inputdir         = input
1625604210.44: iteration        = -1
1625604210.44: iterations       = 1
1625604210.44: keeptmp          = 0
1625604210.44: license_num      = 0
1625604210.44: line_width       = 0
1625604210.44: locking          = 1
1625604210.44: log              = CPU2006
1625604210.44: log_line_width   = 0
1625604210.44: log_timestamp    = 0
1625604210.44: logname          = /mnt/sata/Code/zerocost/zerocost-specbenchmark/result/CPU2006.001.log
1625604210.44: lognum           = 001
1625604210.44: mach             = default
1625604210.44: mail_reports     = all
1625604210.44: mailcompress     = 0
1625604210.44: mailmethod       = smtp
1625604210.44: mailport         = 25
1625604210.44: mailserver       = 127.0.0.1
1625604210.44: mailto           = 
1625604210.44: make             = specmake
1625604210.44: make_no_clobber  = 0
1625604210.44: makeflags        = -j8
1625604210.44: max_active_compares = 0
1625604210.44: mean_anyway      = 0
1625604210.44: min_report_runs  = 3
1625604210.44: minimize_builddirs = 0
1625604210.44: minimize_rundirs = 0
1625604210.44: name             = specrand
1625604210.44: need_math        = 
1625604210.44: no_input_handler = close
1625604210.44: no_monitor       = 
1625604210.44: note_preenv      = 0
1625604210.44: notes0100        =  C base flags: -O2
1625604210.44: notes0110        =  C++ base flags: -O2
1625604210.44: notes0120        =  Fortran base flags: -O2
1625604210.44: notes25          = 
1625604210.44: notes_wrap_columns = 0
1625604210.44: notes_wrap_indent =   
1625604210.44: num              = 999
1625604210.44: obiwan           = 
1625604210.44: os_exe_ext       = 
1625604210.44: output           = asc
1625604210.44: output_format    = asc
1625604210.44: output_root      = 
1625604210.44: outputdir        = output
1625604210.44: parallel_setup   = 1
1625604210.44: parallel_setup_prefork = 
1625604210.44: parallel_setup_type = fork
1625604210.44: parallel_test    = 0
1625604210.44: parallel_test_submit = 0
1625604210.44: path             = /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand
1625604210.44: plain_train      = 1
1625604210.44: preenv           = 1
1625604210.44: prefix           = 
1625604210.44: prepared_by      = 
1625604210.44: ranks            = 1
1625604210.44: rate             = 0
1625604210.44: realuser         = your name here
1625604210.44: rebuild          = 0
1625604210.44: reftime          = reftime
1625604210.44: reltol           = 
1625604210.44: reportable       = 0
1625604210.44: resultdir        = result
1625604210.44: review           = 0
1625604210.44: run              = all
1625604210.44: rundir           = run
1625604210.44: runspec          = /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/runspec --config=linux32-i386-clangzerocost.cfg --action=run --define cores=1 --iterations=1 --noreportable --size=ref all_c_cpp
1625604210.44: safe_eval        = 1
1625604210.44: section_specifier_fatal = 1
1625604210.44: sendmail         = /usr/sbin/sendmail
1625604210.44: setpgrp_enabled  = 1
1625604210.44: setprocgroup     = 1
1625604210.44: shrate           = 0
1625604210.44: sigint           = 2
1625604210.44: size             = ref
1625604210.44: size_class       = ref
1625604210.44: skipabstol       = 
1625604210.44: skipobiwan       = 
1625604210.44: skipreltol       = 
1625604210.44: skiptol          = 
1625604210.44: smarttune        = base
1625604210.44: specdiff         = specdiff
1625604210.44: specmake         = Makefile.YYYtArGeTYYYspec
1625604210.44: specrun          = specinvoke
1625604210.44: speed            = 0
1625604210.44: srcalt           = 
1625604210.44: srcdir           = src
1625604210.44: stagger          = 10
1625604210.44: strict_rundir_verify = 1
1625604210.44: sw_avail         = Dec-9999
1625604210.44: sw_base_ptrsize  = 32-bit
1625604210.44: sw_compiler      = gcc , g++ & gfortran 4.2 Snapshot 20060715 (for i386)
1625604210.44: sw_file          = ext3
1625604210.44: sw_os            = SUSE Linux 10.1 (for i386)
1625604210.44: sw_other         = None
1625604210.44: sw_peak_ptrsize  = 32-bit
1625604210.44: sw_state         = runlevel 3
1625604210.44: sysinfo_program  = 
1625604210.44: table            = 1
1625604210.44: teeout           = yes
1625604210.44: teerunout        = yes
1625604210.44: test_date        = Jul-2021
1625604210.44: test_sponsor     = Turbo Computers
1625604210.44: tester           = 
1625604210.44: top              = /mnt/sata/Code/zerocost/zerocost-specbenchmark
1625604210.44: train_with       = train
1625604210.44: tune             = base
1625604210.44: uid              = 1000
1625604210.44: unbuffer         = 1
1625604210.44: update-flags     = 0
1625604210.44: use_submit_for_speed = 0
1625604210.44: username         = shr
1625604210.44: vendor           = anon
1625604210.44: vendor_makefiles = 0
1625604210.44: verbose          = 5
1625604210.44: version          = 0
1625604210.44: version_url      = http://www.spec.org/auto/cpu2006/current_version
1625604210.44: worklist         = list
1625604210.44: OUTPUT_RMFILES   = rand.3.out
1625604210.44:   Compile for '999.specrand' started at: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.44: Issuing make.clean command 'specmake -j8 clean'
1625604210.44: specmake -j8 clean 2> make.clean.err | tee make.clean.out
1625604210.44: Start make.clean command: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.45: specmake[1]: Entering directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000'
1625604210.45: rm -rf specrand
1625604210.45: rm -rf specrand.exe
1625604210.45: rm -rf *.o  rand.3.out
1625604210.45: find . \( -name \*.o -o -name '*.fppized.f*' \) -print | xargs rm -rf
1625604210.46: rm -rf core
1625604210.46: rm -rf 
1625604210.46: specmake[1]: Leaving directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000'
1625604210.46: Tee child 781991 exited with code 0 (exit code=0, signal=0)
1625604210.46: Stop make.clean command: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.46: Elapsed time for make.clean command: 00:00:00 (0)
1625604210.46: Issuing make command 'specmake -j8 build'
1625604210.46: specmake -j8 build 2> make.err | tee make.out
1625604210.46: Start make command: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.47: specmake[1]: Entering directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000'
1625604210.47: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o main.o -DSPEC_CPU -DNDEBUG    -O2                main.c
1625604210.47: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o specrand.o -DSPEC_CPU -DNDEBUG    -O2                specrand.c
1625604210.48: clang-12clang-12: : warningwarning: : -Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]-Wl,--allow-multiple-definition: 'linker' input unused [-Wunused-command-line-argument]

1625604210.48: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604210.48: clang-12: warning: argument unused during compilation: '-fuse-ld=gold' [-Wunused-command-line-argument]
1625604210.50: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition   -O2          main.o specrand.o                     -o specrand
1625604210.50: clang-12: warning: argument unused during compilation: '-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang' [-Wunused-command-line-argument]
1625604210.55: specmake[1]: Leaving directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000'
1625604210.55: Tee child 782004 exited with code 0 (exit code=0, signal=0)
1625604210.55: Stop make command: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.55: Elapsed time for make command: 00:00:00 (0)
1625604210.55: Issuing options command 'specmake -j8 options'
1625604210.55: specmake -j8 options 2> options.err | tee options.out
1625604210.55: Start options command: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.55: specmake[1]: Entering directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000'
1625604210.55: COMP: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition -c -o options.o -DSPEC_CPU -DNDEBUG    -O2                <source>
1625604210.55: C: CC="/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition"
1625604210.55: C: COBJOPT="-c -o options"
1625604210.55: P: CPUFLAGS="-DSPEC_CPU -DNDEBUG"
1625604210.55: P: BENCH_FLAGS=""
1625604210.55: P: BENCH_CFLAGS=""
1625604210.55: O: OPTIMIZE=""
1625604210.56: O: COPTIMIZE="-O2"
1625604210.56: P: PORTABILITY=""
1625604210.56: P: CPORTABILITY=""
1625604210.56: O: EXTRA_CFLAGS=""
1625604210.56: O: EXTRA_OPTIMIZE=""
1625604210.56: O: EXTRA_COPTIMIZE=""
1625604210.56: P: EXTRA_PORTABILITY=""
1625604210.56: P: EXTRA_CPORTABILITY=""
1625604210.56: LINK: /mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition   -O2          <objects>           -o options
1625604210.56: C: LD="/mnt/sata/ffbuilds/zerocost_llvm_install/bin/clang -fno-asm -fno-asm-blocks -fsanitize=safe-stack -fstack-clash-protection -flto -fuse-ld=gold -fsanitize=cfi-icall -fsanitize-cfi-canonical-jump-tables -fsanitize-cfi-cross-dso -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -mseparate-stack-seg -m32 -Wl,--allow-multiple-definition"
1625604210.56: O: COPTIMIZE="-O2"
1625604210.56: C: LDOUT="-o options"
1625604210.56: specmake[1]: Leaving directory `/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/build/build_base_SegmentZero.0000'
1625604210.56: Tee child 782012 exited with code 0 (exit code=0, signal=0)
1625604210.56: Stop options command: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.56: Elapsed time for options command: 00:00:00 (0)
1625604210.56:   Compile for '999.specrand' ended at: Tue Jul  6 13:43:30 2021 (1625604210)
1625604210.56:   Elapsed compile for '999.specrand': 00:00:00 (0)
1625604210.57: Comparing MD5 hashes:
1625604210.57:   df9e79b3116ec13ac0728bb1cb13979d specrand
1625604210.57:   df9e79b3116ec13ac0728bb1cb13979d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/exe/specrand_base.SegmentZero
1625604210.85: Tee child 782033 exited with code 0 (exit code=0, signal=0)
1625604210.86: update_config_md5(Spec::Config=HASH(0x3998a30), SegmentZero, default) called
1625604210.86: Found new MD5 signature for 999.specrand=base=SegmentZero=default
1625604210.86: Updating config file /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg
1625604210.86: /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg will be saved as /mnt/sata/Code/zerocost/zerocost-specbenchmark/config/linux32-i386-clangzerocost.cfg.2021-07-06_1343

1625604210.86: Build successes: 403.gcc(base), 999.specrand(base)

1625604210.86: Setting Up Run Directories
1625604210.87:   Setting up 403.gcc ref base SegmentZero default: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/166.i
1625604210.87: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/200.i
1625604210.89: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/c-typeck.i
1625604210.90: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/cp-decl.i
1625604210.90: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/expr.i
1625604210.90: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/expr2.i
1625604210.90: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/g23.i
1625604210.91: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/s04.i
1625604210.91: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/scilab.i
1625604210.95: Comparing MD5 hashes:
1625604210.95:   36fc960c2ff6a1ce11bebed0e85743ee /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/exe/gcc_base.SegmentZero
1625604210.95:   36fc960c2ff6a1ce11bebed0e85743ee /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/gcc_base.SegmentZero
1625604210.95: existing (run_base_ref_SegmentZero.0000)
1625604210.95:   Setting up 999.specrand ref base SegmentZero default: Doing REALLY slow MD5 tests for /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000/control
1625604210.96: Comparing MD5 hashes:
1625604210.96:   df9e79b3116ec13ac0728bb1cb13979d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/exe/specrand_base.SegmentZero
1625604210.96:   df9e79b3116ec13ac0728bb1cb13979d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000/specrand_base.SegmentZero
1625604210.96: existing (run_base_ref_SegmentZero.0000)

1625604210.96: -----------------------------------
1625604210.96: Running Benchmarks

1625604210.96: -----------------------------------
1625604210.99: Comparing MD5 hashes:
1625604210.99:   36fc960c2ff6a1ce11bebed0e85743ee /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/exe/gcc_base.SegmentZero
1625604210.99:   36fc960c2ff6a1ce11bebed0e85743ee /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000/gcc_base.SegmentZero
1625604211.00: REAPER(check, ) called
1625604211.00:   Running 403.gcc ref base SegmentZero default
1625604211.00: Commands to run:
1625604211.01:     -C /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000
1625604211.01:     -o 166.out -e 166.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero 166.i -o 166.s (timed)
1625604211.01:     -o 200.out -e 200.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero 200.i -o 200.s (timed)
1625604211.01:     -o c-typeck.out -e c-typeck.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero c-typeck.i -o c-typeck.s (timed)
1625604211.01:     -o cp-decl.out -e cp-decl.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero cp-decl.i -o cp-decl.s (timed)
1625604211.01:     -o expr.out -e expr.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero expr.i -o expr.s (timed)
1625604211.01:     -o expr2.out -e expr2.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero expr2.i -o expr2.s (timed)
1625604211.01:     -o g23.out -e g23.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero g23.i -o g23.s (timed)
1625604211.01:     -o s04.out -e s04.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero s04.i -o s04.s (timed)
1625604211.01:     -o scilab.out -e scilab.err ../run_base_ref_SegmentZero.0000/gcc_base.SegmentZero scilab.i -o scilab.s (timed)
1625604211.01: Specinvoke: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000 -e speccmds.err -o speccmds.stdout -f speccmds.cmd -C
1625604211.01: Issuing command '/mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000 -e speccmds.err -o speccmds.stdout -f speccmds.cmd -C'
1625604211.01: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/403.gcc/run/run_base_ref_SegmentZero.0000 -e speccmds.err -o speccmds.stdout -f speccmds.cmd -C
1625604211.01: Start command: Tue Jul  6 13:43:31 2021 (1625604211)
1625604211.29: Tee child 782059 exited with code 0 (exit code=0, signal=0)
1625604211.29: Stop command: Tue Jul  6 13:43:31 2021 (1625604211)
1625604211.29: Elapsed time for command: 00:00:00 (0)

1625604211.32: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)


1625604211.32: ****************************************
1625604211.32: Contents of g23.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of s04.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of c-typeck.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of expr2.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of 166.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of 200.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of cp-decl.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of scilab.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************

1625604211.32: ****************************************
1625604211.32: Contents of expr.err
1625604211.32: ****************************************
1625604211.32: gcc_base.SegmentZero: internal error: 4
1625604211.32: It is possible that you may be trying to use SPEC's version of gcc 
1625604211.32: without first defining the appropriate flags.  Please check the flags 
1625604211.32: that are in the config files from recently-published results on your 
1625604211.32: platform, and check that you are using an up-to-date compiler.  If
1625604211.32: you still need help, please contact SPEC, reporting your hw/os 
1625604211.32: platform, your compiler version, and your compilation flags.
1625604211.32: Contact SPEC at <URL:http://www.spec.org/>

1625604211.32: ****************************************
1625604211.32: Workload elapsed time (0:1) = 0.00396 seconds

1625604211.32: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.32: Workload elapsed time (0:2) = 0.002665 seconds

1625604211.32: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.32: Workload elapsed time (0:3) = 0.002667 seconds

1625604211.32: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.33: Workload elapsed time (0:4) = 0.005561 seconds

1625604211.33: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.33: Workload elapsed time (0:5) = 0.00391 seconds

1625604211.33: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.33: Workload elapsed time (0:6) = 0.003472 seconds

1625604211.33: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.33: Workload elapsed time (0:7) = 0.002418 seconds

1625604211.33: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.33: Workload elapsed time (0:8) = 0.002483 seconds

1625604211.33: 403.gcc: copy 0 non-zero return code (exit code=1, signal=0)

1625604211.33: Workload elapsed time (0:9) = 0.003058 seconds
1625604211.33: Copy 0 of 403.gcc (base ref) run 1 finished at Tue Jul  6 13:43:31 2021.  Total elapsed time: 0.030194
1625604211.33: Benchmark Times:
1625604211.33:   Start:    Tue Jul  6 13:43:31 2021 (1625604211)
1625604211.33:   Stop:     Tue Jul  6 13:43:31 2021 (1625604211)
1625604211.33:   Elapsed:  00:00:00 (0)
1625604211.33:   Reported: 0 30302000 0.030302
1625604211.33:  Error 403.gcc base ref ratio=265659.03, runtime=0.030302

1625604211.33: -----------------------------------
1625604211.34: Comparing MD5 hashes:
1625604211.34:   df9e79b3116ec13ac0728bb1cb13979d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/exe/specrand_base.SegmentZero
1625604211.34:   df9e79b3116ec13ac0728bb1cb13979d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000/specrand_base.SegmentZero
1625604211.34: REAPER(check, ) called
1625604211.34:   Running 999.specrand ref base SegmentZero default
1625604211.35: Commands to run:
1625604211.35:     -C /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000
1625604211.35:     -o rand.234923.out -e rand.234923.err ../run_base_ref_SegmentZero.0000/specrand_base.SegmentZero 1255432124 234923 (timed)
1625604211.35: Specinvoke: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000 -e speccmds.err -o speccmds.stdout -f speccmds.cmd -C
1625604211.35: Issuing command '/mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000 -e speccmds.err -o speccmds.stdout -f speccmds.cmd -C'
1625604211.35: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000 -e speccmds.err -o speccmds.stdout -f speccmds.cmd -C
1625604211.35: Start command: Tue Jul  6 13:43:31 2021 (1625604211)
1625604211.69: Tee child 782089 exited with code 0 (exit code=0, signal=0)
1625604211.69: Stop command: Tue Jul  6 13:43:31 2021 (1625604211)
1625604211.69: Elapsed time for command: 00:00:00 (0)
1625604211.71: Workload elapsed time (0:1) = 0.086975 seconds
1625604211.71: Copy 0 of 999.specrand (base ref) run 1 finished at Tue Jul  6 13:43:31 2021.  Total elapsed time: 0.086975
1625604211.71: comparing files in '/mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000'
1625604211.71: comparing 'rand.234923.out' with abstol=, binary=, calctol=0, cw=, floatcompare=1, ignorecase=, obiwan=, reltol=, skipabstol=, skipobiwan=, skipreltol=, skiptol=
1625604211.71: Specinvoke: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -E -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000 -c 1 -e compare.err -o compare.stdout -f compare.cmd
1625604211.71: Issuing command '/mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -E -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000 -c 1 -e compare.err -o compare.stdout -f compare.cmd'
1625604211.71: /mnt/sata/Code/zerocost/zerocost-specbenchmark/bin/specinvoke -E -d /mnt/sata/Code/zerocost/zerocost-specbenchmark/benchspec/CPU2006/999.specrand/run/run_base_ref_SegmentZero.0000 -c 1 -e compare.err -o compare.stdout -f compare.cmd
1625604211.71: Start command: Tue Jul  6 13:43:31 2021 (1625604211)
1625604214.87: Tee child 782092 exited with code 0 (exit code=0, signal=0)
1625604214.87: Stop command: Tue Jul  6 13:43:34 2021 (1625604214)
1625604214.88: Elapsed time for command: 00:00:03 (3)
1625604214.88: Benchmark Times:
1625604214.88:   Start:    Tue Jul  6 13:43:31 2021 (1625604211)
1625604214.88:   Stop:     Tue Jul  6 13:43:31 2021 (1625604211)
1625604214.88:   Elapsed:  00:00:00 (0)
1625604214.88:   Reported: 0 87014000 0.087014
1625604214.88:  Success 999.specrand base ref ratio=114.92, runtime=0.087014
1625604214.88: Error: 1x403.gcc
1625604214.88: Success: 1x999.specrand
1625604214.89: Producing Raw Reports
1625604214.89: mach: default
1625604214.89:   ext: SegmentZero
1625604214.89:     size: ref
1625604214.89:       set: int
1625604214.93: NOTICE: sw_compiler is longer than 50 characters and will be split
1625604214.95:         format: raw -> /mnt/sata/Code/zerocost/zerocost-specbenchmark/result/CINT2006.001.ref.rsf
1625604217.78: Parsing flags for 403.gcc base: done
1625604217.78: Doing flag reduction: done
1625604217.79:         format: ASCII -> /mnt/sata/Code/zerocost/zerocost-specbenchmark/result/CINT2006.001.ref.txt
1625604217.92: Tee child 782098 exited with code 0 (exit code=0, signal=0)
1625604217.92:       set: fp
1625604217.93:       set: all_c_cpp
1625604217.93: NOTICE: sw_compiler is longer than 50 characters and will be split
1625604217.95:         format: raw -> /mnt/sata/Code/zerocost/zerocost-specbenchmark/result/CINT2006.001.ref.1.rsf
1625604220.36:   "all_c_cpp" is not a valid benchset name; this file cannot be formatted
1625604220.50: Tee child 782134 exited with code 0 (exit code=0, signal=0)

1625604220.50: The log for this run is in /mnt/sata/Code/zerocost/zerocost-specbenchmark/result/CPU2006.001.log
1625604220.50: The debug log for this run is in /mnt/sata/Code/zerocost/zerocost-specbenchmark/result/CPU2006.001.log.debug

1625604220.50: runspec finished at Tue Jul  6 13:43:40 2021; 74 total seconds elapsed
